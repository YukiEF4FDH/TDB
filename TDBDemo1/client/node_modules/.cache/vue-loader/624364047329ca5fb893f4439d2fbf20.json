{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue?vue&type=template&id=469af010","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue","mtime":1633370470847},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoJPGRpdiBjbGFzcz0iaGVsbG8iPg0KCQk8c3ZnPiA8L3N2Zz4NCgk8L2Rpdj4NCg=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\10.5\\2021-10-05_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue"],"names":[],"mappings":";CACC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACZ,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/10.5/2021-10-05_CHEN_TDBDemo-Flask-Vue/client/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<template>\r\n\t<div class=\"hello\">\r\n\t\t<svg> </svg>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\t// import {csvParse} from \"https://cdn.skypack.dev/d3-dsv@3\";\r\n\r\n\texport default {\r\n\t\tname: 'HelloWorld',\r\n\t\tdata() {\r\n\t\t\tlet thisdata;\r\n\r\n\t\t\tfunction readTextFile(file) {\r\n\t\t\t\tvar rawFile = new XMLHttpRequest();\r\n\t\t\t\trawFile.open(\"GET\", file, false);\r\n\t\t\t\trawFile.onreadystatechange = function() {\r\n\t\t\t\t\tif (rawFile.readyState === 4) {\r\n\t\t\t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\r\n\t\t\t\t\t\t\tthisdata = rawFile.responseText;\r\n\t\t\t\t\t\t\t// alert(allText);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trawFile.send(null);\r\n\t\t\t}\r\n\r\n\t\t\treadTextFile(\"F1A_Data.csv\");\r\n\r\n\t\t\tvar data = d3.csvParse(thisdata, function(d, i, columns) {\r\n\t\t\t\treturn (d3.autoType(d), d.total = d3.sum(columns, c => d[c]), d)\r\n\t\t\t}).sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n\r\n\t\t\tconsole.log(data);\r\n\t\t\treturn {\r\n\t\t\t\tdata,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n</script>\n"]}]}