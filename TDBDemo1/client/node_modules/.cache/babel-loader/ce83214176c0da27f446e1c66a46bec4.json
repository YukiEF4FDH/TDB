{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue?vue&type=template&id=b4336c40","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue","mtime":1636559936219},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgd2l0aEN0eCBhcyBfd2l0aEN0eCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBpZDogImNvbnRhaW5lciIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgaWQ6ICJvdmVybGF5Igp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIFRoZXJlJ3JlIHNvbWUgdGV4dCBmb3IgdGVzdC4gIik7Cgp2YXIgX2hvaXN0ZWRfNCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBGb3IgZXhhbXBsZSwgdGhpcyBpcyBhICIpOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgicmVmIik7Cgp2YXIgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIuIik7Cgp2YXIgX2hvaXN0ZWRfOCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiBBbmQsIHRoaXMgaXMgYSAiKTsKCnZhciBfaG9pc3RlZF8xMCA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJjbGFpbSIpOwoKdmFyIF9ob2lzdGVkXzExID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIi4iKTsKCnZhciBfaG9pc3RlZF8xMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8xMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzdmciLCB7CiAgaWQ6ICJzdmdDdXJ2ZTEiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfcmVmID0gX3Jlc29sdmVDb21wb25lbnQoInJlZiIpOwoKICB2YXIgX2NvbXBvbmVudF9jbGFpbSA9IF9yZXNvbHZlQ29tcG9uZW50KCJjbGFpbSIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxjYW52YXMgaWQ9XCJteUNhbnZhczJcIiB3aWR0aD1cIjgwMFwiIGhlaWdodD1cIjMwMFwiPjwvY2FudmFzPiAiKSwgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxzdmcgaWQ9XCJzdmdDdXJ2ZTBcIiB3aWR0aD1cIjgwMFwiIGhlaWdodD1cIjMwMFwiPjwvc3ZnPiAiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9ob2lzdGVkXzQsIF9ob2lzdGVkXzUsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X3JlZiwgbnVsbCwgewogICAgZGVmYXVsdDogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19ob2lzdGVkXzZdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9ob2lzdGVkXzcsIF9ob2lzdGVkXzgsIF9ob2lzdGVkXzksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2NsYWltLCBudWxsLCB7CiAgICBkZWZhdWx0OiBfd2l0aEN0eChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBbX2hvaXN0ZWRfMTBdOwogICAgfSksCiAgICBfOiAxCiAgICAvKiBTVEFCTEUgKi8KCiAgfSksIF9ob2lzdGVkXzExLCBfaG9pc3RlZF8xMl0pLCBfaG9pc3RlZF8xMywgX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIDxzdmcgaWQ9XCJzdmdDdXJ2ZTJcIj48L3N2Zz4gIildKTsKfQ=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue"],"names":[],"mappings":";;AACO,EAAA,EAAE,EAAC;;;AAGD,EAAA,EAAE,EAAC;;;+CAAU,gC;;8BACa,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;+CAAM,0B;;+CACP,K;;+CAAS,G;;8BAAC,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;+CAAM,kB;;gDACtB,O;;gDAAa,G;;+BAAC,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;+BAEtC,mBAAA,CAA0B,KAA1B,EAA0B;AAArB,EAAA,EAAE,EAAC;AAAkB,CAA1B,EAAmB,IAAnB,EAAmB,CAAA;AAAA;AAAnB,C;;;;;;;uBARF,mBAAA,CAUM,KAVN,EAAA,UAAA,EAUM,CATJ,mBAAA,CAAA,mEAAA,CASI,EARJ,mBAAA,CAAA,6DAAA,CAQI,EAPJ,mBAAA,CAIM,KAJN,EAAA,UAAA,EAIM,C,UAAA,EAHyB,UAGzB,E,UAAA,EAFmB,YAAA,CAAc,cAAd,EAAc,IAAd,EAAc;sBAAT;AAAA,aAAG,C,UAAA,CAAH;AAAA,K,CAAS;;;;AAAA,GAAd,CAEnB,E,UAAA,EAFkC,UAElC,E,UAAA,EADW,YAAA,CAAoB,gBAApB,EAAoB,IAApB,EAAoB;sBAAb;AAAA,aAAK,C,WAAA,CAAL;AAAA,K,CAAa;;;;AAAA,GAApB,CACX,E,WAAA,EADgC,WAChC,CAJN,CAOI,EAFJ,WAEI,EADJ,mBAAA,CAAA,gCAAA,CACI,CAVN,C","sourcesContent":["<template>\r\n  <div id=\"container\">\r\n    <!-- <canvas id=\"myCanvas2\" width=\"800\" height=\"300\"></canvas> -->\r\n    <!-- <svg id=\"svgCurve0\" width=\"800\" height=\"300\"></svg> -->\r\n    <div id=\"overlay\">\r\n      There're some text for test. <br />\r\n      For example, this is a <ref>ref</ref>.<br />\r\n      And, this is a <claim>claim</claim>.<br />\r\n    </div>\r\n    <svg id=\"svgCurve1\"></svg>\r\n    <!-- <svg id=\"svgCurve2\"></svg> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport ref from \"@/components/ref.vue\";\r\nimport claim from \"@/components/claim.vue\";\r\n\r\nexport default {\r\n  name: \"Test2\",\r\n  data() {\r\n    // let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    // let data = JSON.parse(pointStr);\r\n\r\n    // return { data };\r\n  },\r\n  components: { ref, claim },\r\n  methods: {\r\n    draw() {\r\n      var data = [{ x1: 0, x2: 60, y1: 0, y2: 20 }];\r\n\r\n      var data2 = [{ x1: 0, x2: 60, y1: 30, y2: 50 }];\r\n\r\n      var svg = d3.select(\"#svgCurve1\");\r\n\r\n      var rect1 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"id\", \"rec1\");\r\n\r\n      var rect2 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data2)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"pink\")\r\n        .attr(\"id\", \"rec2\");\r\n\r\n      /////////////////\r\n\r\n      // var c = document.getElementById(\"myCanvas2\");\r\n      // var ctx = c.getContext(\"2d\");\r\n\r\n      // ctx.beginPath();\r\n      // ctx.moveTo(180, 20);\r\n      // ctx.bezierCurveTo(180, 100, 200, 100, 300, 20);\r\n      // ctx.strokeStyle = \"#FF0000\";\r\n      // ctx.stroke();\r\n\r\n      //////////////\r\n\r\n      //////////////////////////////\r\n    },\r\n    drawCurve() {\r\n          let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n      var points = [];\r\n      const target_copy = data;//Object.assign({}, this.data);\r\n      for (var thing in target_copy) {\r\n        console.log(target_copy[thing][0] + \",\" + target_copy[thing][1]);\r\n        points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n      \r\n\r\n      d3.select(\"#svgCurve2\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"red\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n        console.log(\"?\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#container {\r\n  position: relative;\r\n  border: 2px solid red;\r\n}\r\n#overlay {\r\n  position: absolute;\r\n  border: 2px solid green;\r\n  fill: green;\r\n}\r\n#myCanvas2 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n}\r\n#svgCurve0 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n  fill: orange;\r\n}\r\n/* #overlayB {\r\n  position: relative;\r\n  top: 10px;\r\n  left: 50px;\r\n  border: 2px solid blue;\r\n} */\r\n#svgCurve1 {\r\n  position: relative;\r\n  border: 2px dashed blue;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 30%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"],"sourceRoot":""}]}