{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue?vue&type=template&id=2a1fc8fd","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue","mtime":1636389954878},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxzdmcgaWQ9InN2Z0N1cnZlIj4NCiAgICA8IS0tIDxUZXN0Q3VydmUxLz4gLS0+DQogICAgPFRlc3RDdXJ2ZTIvPg0KICA8L3N2Zz4NCg=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/11.8/2021-11-08_CHEN_TDBDemo-Flask-Vue/client/src/components/TestCurve.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <svg id=\"svgCurve\">\r\n    <!-- <TestCurve1/> -->\r\n    <TestCurve2/>\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport TestCurve1 from \"@/components/TestCurve1.vue\";\r\nimport TestCurve2 from \"@/components/TestCurve2.vue\";\r\n\r\nexport default {\r\n  name: \"TestCurve\",\r\n  data() {\r\n    let pointStr = \"[[0,0],[403,23],[35,35],[10,10]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n    return { data };\r\n  },\r\n  components: { TestCurve1,TestCurve2 },\r\n  methods: {\r\n    draw() {\r\n      var points = [];\r\n      // const target_copy = Object.assign({}, this.data);\r\n      // for (var thing in target_copy)\r\n      // {\r\n      //   console.log(target_copy[thing][0]+\",\"+target_copy[thing][1]);\r\n      //   points.push(new Array(target_copy[thing][0],target_copy[thing][1]));\r\n      // }\r\n      // console.log(points);\r\n\r\n      var points1 = TestCurve1.data();\r\n      console.log(points1);\r\n      for (var thing in points1.data) \r\n      {\r\n        //points.push(points1.data[thing]);  ok\r\n        var d1 = points1.data[thing][0]+5;\r\n        var d2 = points1.data[thing][1]+5;\r\n        points.push(new Array(d1,d2));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n\r\n      d3.select(\"#divCurve\").append(\"svg\").attr(\"id\", \"svgCurve\");\r\n\r\n      d3.select(\"#svgCurve\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"none\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>  \r\n\r\n<style>\r\n</style>"]}]}