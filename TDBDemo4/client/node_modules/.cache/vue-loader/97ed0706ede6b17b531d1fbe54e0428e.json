{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue","mtime":1639517084242},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkN1cnZlIiwNCiAgZGF0YSgpIHt9LA0KICBtZXRob2RzOiB7DQogICAgZHJhd0N1cnZlKGlkKSB7DQogICAgICBjb25zb2xlLmxvZyhpZCk7DQogICAgICBpZiAoaWQgPT0gIiNzdmcxQ3VydmUwIikgew0KICAgICAgICBjb25zb2xlLmxvZyhpZCk7DQogICAgICAgIGxldCBwb2ludFN0ciA9ICJbWzUsMTMwXSxbMjAwLDYwXSxbNDUwLDI1XSxbNTUwLDg0XV0iOw0KICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UocG9pbnRTdHIpOw0KICAgICAgICB2YXIgcG9pbnRzID0gW107DQogICAgICAgIGNvbnN0IHRhcmdldF9jb3B5ID0gZGF0YTsNCiAgICAgICAgZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsNCiAgICAgICAgICBwb2ludHMucHVzaChuZXcgQXJyYXkodGFyZ2V0X2NvcHlbdGhpbmddWzBdLCB0YXJnZXRfY29weVt0aGluZ11bMV0pKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGNvbnN0IGN1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7DQoNCiAgICAgICAgZDMuc2VsZWN0KGlkKQ0KICAgICAgICAgIC5hcHBlbmQoInBhdGgiKQ0KICAgICAgICAgIC5hdHRyKCJkIiwgY3VydmUocG9pbnRzKSkNCiAgICAgICAgICAudHJhbnNpdGlvbigpDQogICAgICAgICAgLmR1cmF0aW9uKDUwMCkNCiAgICAgICAgICAuYXR0cigic3Ryb2tlIiwgIiNhYWJlOWIiKQ0KICAgICAgICAgIC5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKQ0KICAgICAgICAgIC5hdHRyKCJmaWxsIiwgIm5vbmUiKTsNCiAgICAgIH0gZWxzZSBpZiAoaWQgPT0gIiNzdmcyQ3VydmUyIikgew0KICAgICAgICBjb25zb2xlLmxvZyhpZCk7DQogICAgICAgIGxldCBwb2ludFN0ciA9ICJbWzUsMTMwXSxbMjAwLDk1XSxbNDIwLDkyXSxbNTEwLDEzOV1dIjsNCiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHBvaW50U3RyKTsNCiAgICAgICAgbGV0IHBvaW50cyA9IFtdOw0KICAgICAgICBjb25zdCB0YXJnZXRfY29weSA9IGRhdGE7DQogICAgICAgIGZvciAobGV0IHRoaW5nIGluIHRhcmdldF9jb3B5KSB7DQogICAgICAgICAgcG9pbnRzLnB1c2gobmV3IEFycmF5KHRhcmdldF9jb3B5W3RoaW5nXVswXSwgdGFyZ2V0X2NvcHlbdGhpbmddWzFdKSk7DQogICAgICAgIH0NCg0KICAgICAgICBjb25zdCBjdXJ2ZSA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOw0KDQogICAgICAgIGQzLnNlbGVjdChpZCkNCiAgICAgICAgICAuYXBwZW5kKCJwYXRoIikNCiAgICAgICAgICAuYXR0cigiZCIsIGN1cnZlKHBvaW50cykpDQogICAgICAgICAgLnRyYW5zaXRpb24oKQ0KICAgICAgICAgIC5kdXJhdGlvbig1MDApDQogICAgICAgICAgLmF0dHIoInN0cm9rZSIsICIjYWFiZTliIikNCiAgICAgICAgICAuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikNCiAgICAgICAgICAuYXR0cigiZmlsbCIsICJub25lIik7DQogICAgICB9IGVsc2UgaWYgKGlkID09ICIjc3ZnNEN1cnZlMSIpIHsNCiAgICAgICAgY29uc29sZS5sb2coaWQpOw0KICAgICAgICBsZXQgcG9pbnRTdHIgPSAiW1s2MCw2MF0sWzE1MCwzNV0sWzIyMCwzMF0sWzI1MCw1MF1dIjsNCiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKHBvaW50U3RyKTsNCiAgICAgICAgbGV0IHBvaW50cyA9IFtdOw0KICAgICAgICBjb25zdCB0YXJnZXRfY29weSA9IGRhdGE7DQogICAgICAgIGZvciAobGV0IHRoaW5nIGluIHRhcmdldF9jb3B5KSB7DQogICAgICAgICAgcG9pbnRzLnB1c2gobmV3IEFycmF5KHRhcmdldF9jb3B5W3RoaW5nXVswXSwgdGFyZ2V0X2NvcHlbdGhpbmddWzFdKSk7DQogICAgICAgIH0NCg0KICAgICAgICBjb25zdCBjdXJ2ZSA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOw0KDQogICAgICAgIGQzLnNlbGVjdChpZCkNCiAgICAgICAgICAuYXBwZW5kKCJwYXRoIikNCiAgICAgICAgICAuYXR0cigiZCIsIGN1cnZlKHBvaW50cykpDQogICAgICAgICAgLnRyYW5zaXRpb24oKQ0KICAgICAgICAgIC5kdXJhdGlvbig1MDApDQogICAgICAgICAgLmF0dHIoInN0cm9rZSIsICIjYWFiZTliIikNCiAgICAgICAgICAuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikNCiAgICAgICAgICAuYXR0cigiZmlsbCIsICJub25lIik7DQogICAgICB9DQogICAgfSwNCiAgICBkcmF3Q3VydmUyKGlkKSB7DQogICAgICBpZiAoaWQgPT0gInN2Z0N1cnZlMyIpIHsNCiAgICAgICAgbGV0IHBvaW50U3RyID0gIltbMCwxMTBdLFsxNTAsNDBdLFs1MDAsNTBdLFs3MDAsNTVdXSI7DQogICAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShwb2ludFN0cik7DQogICAgICAgIGxldCBwb2ludHMgPSBbXTsNCiAgICAgICAgY29uc3QgdGFyZ2V0X2NvcHkgPSBkYXRhOw0KICAgICAgICBmb3IgKGxldCB0aGluZyBpbiB0YXJnZXRfY29weSkgew0KICAgICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOw0KICAgICAgICB9DQoNCiAgICAgICAgY29uc3QgY3VydmUgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsNCg0KICAgICAgICBkMy5zZWxlY3QoIiNzdmdDdXJ2ZTMiKQ0KICAgICAgICAgIC5hcHBlbmQoInBhdGgiKQ0KICAgICAgICAgIC5hdHRyKCJkIiwgY3VydmUocG9pbnRzKSkNCiAgICAgICAgICAudHJhbnNpdGlvbigpDQogICAgICAgICAgLmR1cmF0aW9uKDUwMCkNCiAgICAgICAgICAuYXR0cigic3Ryb2tlIiwgIiNkMzlkOWMiKQ0KICAgICAgICAgIC5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKQ0KICAgICAgICAgIC5hdHRyKCJmaWxsIiwgIm5vbmUiKTsNCiAgICAgIH0gZWxzZSBpZiAoaWQgPT0gInN2ZzFDdXJ2ZTQiKSB7DQogICAgICAgIGxldCBwb2ludFN0ciA9ICJbWzE1MCwxMjBdLFsyNTAsMTcwXSxbNDAwLDE2MF0sWzY1MCwxMzBdXSI7DQogICAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShwb2ludFN0cik7DQogICAgICAgIGxldCBwb2ludHMgPSBbXTsNCiAgICAgICAgY29uc3QgdGFyZ2V0X2NvcHkgPSBkYXRhOw0KICAgICAgICBmb3IgKGxldCB0aGluZyBpbiB0YXJnZXRfY29weSkgew0KICAgICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOw0KICAgICAgICB9DQoNCiAgICAgICAgY29uc3QgY3VydmUgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsNCg0KICAgICAgICBkMy5zZWxlY3QoIiNzdmcxQ3VydmU0IikNCiAgICAgICAgICAuYXBwZW5kKCJwYXRoIikNCiAgICAgICAgICAuYXR0cigiZCIsIGN1cnZlKHBvaW50cykpDQogICAgICAgICAgLnRyYW5zaXRpb24oKQ0KICAgICAgICAgIC5kdXJhdGlvbig1MDApDQogICAgICAgICAgLmF0dHIoInN0cm9rZSIsICIjZDM5ZDljIikNCiAgICAgICAgICAuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikNCiAgICAgICAgICAuYXR0cigiZmlsbCIsICJub25lIik7DQogICAgICB9IGVsc2UgaWYgKGlkID09ICJzdmcyQ3VydmUxIikgew0KICAgICAgICBsZXQgcG9pbnRTdHIgPSAiW1swLDE4MF0sWzE1MCw4MF0sWzQwMCwxMjBdLFs1MDAsMTMzXV0iOw0KICAgICAgICBsZXQgZGF0YSA9IEpTT04ucGFyc2UocG9pbnRTdHIpOw0KICAgICAgICBsZXQgcG9pbnRzID0gW107DQogICAgICAgIGNvbnN0IHRhcmdldF9jb3B5ID0gZGF0YTsNCiAgICAgICAgZm9yIChsZXQgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsNCiAgICAgICAgICBwb2ludHMucHVzaChuZXcgQXJyYXkodGFyZ2V0X2NvcHlbdGhpbmddWzBdLCB0YXJnZXRfY29weVt0aGluZ11bMV0pKTsNCiAgICAgICAgfQ0KDQogICAgICAgIGNvbnN0IGN1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7DQoNCiAgICAgICAgZDMuc2VsZWN0KCIjc3ZnMkN1cnZlMSIpDQogICAgICAgICAgLmFwcGVuZCgicGF0aCIpDQogICAgICAgICAgLmF0dHIoImQiLCBjdXJ2ZShwb2ludHMpKQ0KICAgICAgICAgIC50cmFuc2l0aW9uKCkNCiAgICAgICAgICAuZHVyYXRpb24oNTAwKQ0KICAgICAgICAgIC5hdHRyKCJzdHJva2UiLCAiI2QzOWQ5YyIpDQogICAgICAgICAgLmF0dHIoInN0cm9rZS13aWR0aCIsIDIpDQogICAgICAgICAgLmF0dHIoImZpbGwiLCAibm9uZSIpOw0KDQogICAgICAgIGQzLnNlbGVjdCgiI3N2ZzJDdXJ2ZTEiKQ0KICAgICAgICAgIC5hcHBlbmQoImxpbmUiKQ0KICAgICAgICAgIC5hdHRyKCJ4MSIsIDEzMCkNCiAgICAgICAgICAuYXR0cigieTEiLCAxMzMpDQogICAgICAgICAgLmF0dHIoIngyIiwgODgwKQ0KICAgICAgICAgIC5hdHRyKCJ5MiIsIDEzMykNCiAgICAgICAgICAuYXR0cigic3Ryb2tlIiwgImJsYWNrIikNCiAgICAgICAgICAuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikNCiAgICAgICAgICAuYXR0cigiZmlsbCIsICJub25lIikNCiAgICAgICAgICAuYXR0cigic3Ryb2tlLWRhc2hhcnJheSIsIDUpOw0KICAgICAgfQ0KICAgIH0sDQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5kcmF3KCk7DQogIH0sDQp9Ow0K"},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue"],"names":[],"mappings":"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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACb,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE;;QAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE;;QAEA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/Demo/TDBDemo4/client/src/components/Curve.vue","sourceRoot":"","sourcesContent":["<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  name: \"Curve\",\r\n  data() {},\r\n  methods: {\r\n    drawCurve(id) {\r\n      console.log(id);\r\n      if (id == \"#svg1Curve0\") {\r\n        console.log(id);\r\n        let pointStr = \"[[5,130],[200,60],[450,25],[550,84]]\";\r\n        let data = JSON.parse(pointStr);\r\n        var points = [];\r\n        const target_copy = data;\r\n        for (var thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"#svg2Curve2\") {\r\n        console.log(id);\r\n        let pointStr = \"[[5,130],[200,95],[420,92],[510,139]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"#svg4Curve1\") {\r\n        console.log(id);\r\n        let pointStr = \"[[60,60],[150,35],[220,30],[250,50]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      }\r\n    },\r\n    drawCurve2(id) {\r\n      if (id == \"svgCurve3\") {\r\n        let pointStr = \"[[0,110],[150,40],[500,50],[700,55]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svgCurve3\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"svg1Curve4\") {\r\n        let pointStr = \"[[150,120],[250,170],[400,160],[650,130]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svg1Curve4\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"svg2Curve1\") {\r\n        let pointStr = \"[[0,180],[150,80],[400,120],[500,133]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svg2Curve1\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n\r\n        d3.select(\"#svg2Curve1\")\r\n          .append(\"line\")\r\n          .attr(\"x1\", 130)\r\n          .attr(\"y1\", 133)\r\n          .attr(\"x2\", 880)\r\n          .attr(\"y2\", 133)\r\n          .attr(\"stroke\", \"black\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke-dasharray\", 5);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#svg1Curve0 {\r\n  position: absolute;\r\n  /* border: 2px dashed purple; */\r\n  width: 750px;\r\n  height: 120px;\r\n  left: 35%;\r\n  top: 50.5%;\r\n}\r\n#svgCurve3 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 850px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 10%;\r\n}\r\n#svg1Curve4 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 850px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 20%;\r\n}\r\n#svg2Curve1 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 900px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 30%;\r\n}\r\n#svg2Curve2 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 510px;\r\n  height: 320px;\r\n  margin-top: -8.5%;\r\n  margin-left: 14%;\r\n}\r\n#svg4Curve1 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 270px;\r\n  height: 120px;\r\n  margin-top: -15%;\r\n  margin-left: 5%;\r\n}\r\n</style>"]}]}