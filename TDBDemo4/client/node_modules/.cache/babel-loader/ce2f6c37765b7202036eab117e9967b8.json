{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue","mtime":1639517084242},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\babel.config.js","mtime":1632973839640},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkN1cnZlIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge30sCiAgbWV0aG9kczogewogICAgZHJhd0N1cnZlOiBmdW5jdGlvbiBkcmF3Q3VydmUoaWQpIHsKICAgICAgY29uc29sZS5sb2coaWQpOwoKICAgICAgaWYgKGlkID09ICIjc3ZnMUN1cnZlMCIpIHsKICAgICAgICBjb25zb2xlLmxvZyhpZCk7CiAgICAgICAgdmFyIHBvaW50U3RyID0gIltbNSwxMzBdLFsyMDAsNjBdLFs0NTAsMjVdLFs1NTAsODRdXSI7CiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHBvaW50U3RyKTsKICAgICAgICB2YXIgcG9pbnRzID0gW107CiAgICAgICAgdmFyIHRhcmdldF9jb3B5ID0gZGF0YTsKCiAgICAgICAgZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsKICAgICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGN1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7CiAgICAgICAgZDMuc2VsZWN0KGlkKS5hcHBlbmQoInBhdGgiKS5hdHRyKCJkIiwgY3VydmUocG9pbnRzKSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDUwMCkuYXR0cigic3Ryb2tlIiwgIiNhYWJlOWIiKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKS5hdHRyKCJmaWxsIiwgIm5vbmUiKTsKICAgICAgfSBlbHNlIGlmIChpZCA9PSAiI3N2ZzJDdXJ2ZTIiKSB7CiAgICAgICAgY29uc29sZS5sb2coaWQpOwogICAgICAgIHZhciBfcG9pbnRTdHIgPSAiW1s1LDEzMF0sWzIwMCw5NV0sWzQyMCw5Ml0sWzUxMCwxMzldXSI7CgogICAgICAgIHZhciBfZGF0YSA9IEpTT04ucGFyc2UoX3BvaW50U3RyKTsKCiAgICAgICAgdmFyIF9wb2ludHMgPSBbXTsKICAgICAgICB2YXIgX3RhcmdldF9jb3B5ID0gX2RhdGE7CgogICAgICAgIGZvciAodmFyIF90aGluZyBpbiBfdGFyZ2V0X2NvcHkpIHsKICAgICAgICAgIF9wb2ludHMucHVzaChuZXcgQXJyYXkoX3RhcmdldF9jb3B5W190aGluZ11bMF0sIF90YXJnZXRfY29weVtfdGhpbmddWzFdKSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgX2N1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7CgogICAgICAgIGQzLnNlbGVjdChpZCkuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIF9jdXJ2ZShfcG9pbnRzKSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDUwMCkuYXR0cigic3Ryb2tlIiwgIiNhYWJlOWIiKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKS5hdHRyKCJmaWxsIiwgIm5vbmUiKTsKICAgICAgfSBlbHNlIGlmIChpZCA9PSAiI3N2ZzRDdXJ2ZTEiKSB7CiAgICAgICAgY29uc29sZS5sb2coaWQpOwogICAgICAgIHZhciBfcG9pbnRTdHIyID0gIltbNjAsNjBdLFsxNTAsMzVdLFsyMjAsMzBdLFsyNTAsNTBdXSI7CgogICAgICAgIHZhciBfZGF0YTIgPSBKU09OLnBhcnNlKF9wb2ludFN0cjIpOwoKICAgICAgICB2YXIgX3BvaW50czIgPSBbXTsKICAgICAgICB2YXIgX3RhcmdldF9jb3B5MiA9IF9kYXRhMjsKCiAgICAgICAgZm9yICh2YXIgX3RoaW5nMiBpbiBfdGFyZ2V0X2NvcHkyKSB7CiAgICAgICAgICBfcG9pbnRzMi5wdXNoKG5ldyBBcnJheShfdGFyZ2V0X2NvcHkyW190aGluZzJdWzBdLCBfdGFyZ2V0X2NvcHkyW190aGluZzJdWzFdKSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgX2N1cnZlMiA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOwoKICAgICAgICBkMy5zZWxlY3QoaWQpLmFwcGVuZCgicGF0aCIpLmF0dHIoImQiLCBfY3VydmUyKF9wb2ludHMyKSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDUwMCkuYXR0cigic3Ryb2tlIiwgIiNhYWJlOWIiKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKS5hdHRyKCJmaWxsIiwgIm5vbmUiKTsKICAgICAgfQogICAgfSwKICAgIGRyYXdDdXJ2ZTI6IGZ1bmN0aW9uIGRyYXdDdXJ2ZTIoaWQpIHsKICAgICAgaWYgKGlkID09ICJzdmdDdXJ2ZTMiKSB7CiAgICAgICAgdmFyIHBvaW50U3RyID0gIltbMCwxMTBdLFsxNTAsNDBdLFs1MDAsNTBdLFs3MDAsNTVdXSI7CiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHBvaW50U3RyKTsKICAgICAgICB2YXIgcG9pbnRzID0gW107CiAgICAgICAgdmFyIHRhcmdldF9jb3B5ID0gZGF0YTsKCiAgICAgICAgZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsKICAgICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGN1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7CiAgICAgICAgZDMuc2VsZWN0KCIjc3ZnQ3VydmUzIikuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIGN1cnZlKHBvaW50cykpLnRyYW5zaXRpb24oKS5kdXJhdGlvbig1MDApLmF0dHIoInN0cm9rZSIsICIjZDM5ZDljIikuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikuYXR0cigiZmlsbCIsICJub25lIik7CiAgICAgIH0gZWxzZSBpZiAoaWQgPT0gInN2ZzFDdXJ2ZTQiKSB7CiAgICAgICAgdmFyIF9wb2ludFN0cjMgPSAiW1sxNTAsMTIwXSxbMjUwLDE3MF0sWzQwMCwxNjBdLFs2NTAsMTMwXV0iOwoKICAgICAgICB2YXIgX2RhdGEzID0gSlNPTi5wYXJzZShfcG9pbnRTdHIzKTsKCiAgICAgICAgdmFyIF9wb2ludHMzID0gW107CiAgICAgICAgdmFyIF90YXJnZXRfY29weTMgPSBfZGF0YTM7CgogICAgICAgIGZvciAodmFyIF90aGluZzMgaW4gX3RhcmdldF9jb3B5MykgewogICAgICAgICAgX3BvaW50czMucHVzaChuZXcgQXJyYXkoX3RhcmdldF9jb3B5M1tfdGhpbmczXVswXSwgX3RhcmdldF9jb3B5M1tfdGhpbmczXVsxXSkpOwogICAgICAgIH0KCiAgICAgICAgdmFyIF9jdXJ2ZTMgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsKCiAgICAgICAgZDMuc2VsZWN0KCIjc3ZnMUN1cnZlNCIpLmFwcGVuZCgicGF0aCIpLmF0dHIoImQiLCBfY3VydmUzKF9wb2ludHMzKSkudHJhbnNpdGlvbigpLmR1cmF0aW9uKDUwMCkuYXR0cigic3Ryb2tlIiwgIiNkMzlkOWMiKS5hdHRyKCJzdHJva2Utd2lkdGgiLCAyKS5hdHRyKCJmaWxsIiwgIm5vbmUiKTsKICAgICAgfSBlbHNlIGlmIChpZCA9PSAic3ZnMkN1cnZlMSIpIHsKICAgICAgICB2YXIgX3BvaW50U3RyNCA9ICJbWzAsMTgwXSxbMTUwLDgwXSxbNDAwLDEyMF0sWzUwMCwxMzNdXSI7CgogICAgICAgIHZhciBfZGF0YTQgPSBKU09OLnBhcnNlKF9wb2ludFN0cjQpOwoKICAgICAgICB2YXIgX3BvaW50czQgPSBbXTsKICAgICAgICB2YXIgX3RhcmdldF9jb3B5NCA9IF9kYXRhNDsKCiAgICAgICAgZm9yICh2YXIgX3RoaW5nNCBpbiBfdGFyZ2V0X2NvcHk0KSB7CiAgICAgICAgICBfcG9pbnRzNC5wdXNoKG5ldyBBcnJheShfdGFyZ2V0X2NvcHk0W190aGluZzRdWzBdLCBfdGFyZ2V0X2NvcHk0W190aGluZzRdWzFdKSk7CiAgICAgICAgfQoKICAgICAgICB2YXIgX2N1cnZlNCA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOwoKICAgICAgICBkMy5zZWxlY3QoIiNzdmcyQ3VydmUxIikuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIF9jdXJ2ZTQoX3BvaW50czQpKS50cmFuc2l0aW9uKCkuZHVyYXRpb24oNTAwKS5hdHRyKCJzdHJva2UiLCAiI2QzOWQ5YyIpLmF0dHIoInN0cm9rZS13aWR0aCIsIDIpLmF0dHIoImZpbGwiLCAibm9uZSIpOwogICAgICAgIGQzLnNlbGVjdCgiI3N2ZzJDdXJ2ZTEiKS5hcHBlbmQoImxpbmUiKS5hdHRyKCJ4MSIsIDEzMCkuYXR0cigieTEiLCAxMzMpLmF0dHIoIngyIiwgODgwKS5hdHRyKCJ5MiIsIDEzMykuYXR0cigic3Ryb2tlIiwgImJsYWNrIikuYXR0cigic3Ryb2tlLXdpZHRoIiwgMikuYXR0cigiZmlsbCIsICJub25lIikuYXR0cigic3Ryb2tlLWRhc2hhcnJheSIsIDUpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3KCk7CiAgfQp9Ow=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo4\\client\\src\\components\\Curve.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  name: \"Curve\",\r\n  data() {},\r\n  methods: {\r\n    drawCurve(id) {\r\n      console.log(id);\r\n      if (id == \"#svg1Curve0\") {\r\n        console.log(id);\r\n        let pointStr = \"[[5,130],[200,60],[450,25],[550,84]]\";\r\n        let data = JSON.parse(pointStr);\r\n        var points = [];\r\n        const target_copy = data;\r\n        for (var thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"#svg2Curve2\") {\r\n        console.log(id);\r\n        let pointStr = \"[[5,130],[200,95],[420,92],[510,139]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"#svg4Curve1\") {\r\n        console.log(id);\r\n        let pointStr = \"[[60,60],[150,35],[220,30],[250,50]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(id)\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#aabe9b\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      }\r\n    },\r\n    drawCurve2(id) {\r\n      if (id == \"svgCurve3\") {\r\n        let pointStr = \"[[0,110],[150,40],[500,50],[700,55]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svgCurve3\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"svg1Curve4\") {\r\n        let pointStr = \"[[150,120],[250,170],[400,160],[650,130]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svg1Curve4\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n      } else if (id == \"svg2Curve1\") {\r\n        let pointStr = \"[[0,180],[150,80],[400,120],[500,133]]\";\r\n        let data = JSON.parse(pointStr);\r\n        let points = [];\r\n        const target_copy = data;\r\n        for (let thing in target_copy) {\r\n          points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n        }\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n\r\n        d3.select(\"#svg2Curve1\")\r\n          .append(\"path\")\r\n          .attr(\"d\", curve(points))\r\n          .transition()\r\n          .duration(500)\r\n          .attr(\"stroke\", \"#d39d9c\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\");\r\n\r\n        d3.select(\"#svg2Curve1\")\r\n          .append(\"line\")\r\n          .attr(\"x1\", 130)\r\n          .attr(\"y1\", 133)\r\n          .attr(\"x2\", 880)\r\n          .attr(\"y2\", 133)\r\n          .attr(\"stroke\", \"black\")\r\n          .attr(\"stroke-width\", 2)\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke-dasharray\", 5);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#svg1Curve0 {\r\n  position: absolute;\r\n  /* border: 2px dashed purple; */\r\n  width: 750px;\r\n  height: 120px;\r\n  left: 35%;\r\n  top: 50.5%;\r\n}\r\n#svgCurve3 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 850px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 10%;\r\n}\r\n#svg1Curve4 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 850px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 20%;\r\n}\r\n#svg2Curve1 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 900px;\r\n  height: 320px;\r\n  margin-top: -18%;\r\n  margin-left: 30%;\r\n}\r\n#svg2Curve2 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 510px;\r\n  height: 320px;\r\n  margin-top: -8.5%;\r\n  margin-left: 14%;\r\n}\r\n#svg4Curve1 {\r\n  position: absolute;\r\n  /* border: 5px dashed purple; */\r\n  width: 270px;\r\n  height: 120px;\r\n  margin-top: -15%;\r\n  margin-left: 5%;\r\n}\r\n</style>"],"sourceRoot":""}]}