{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue?vue&type=template&id=469af010","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue","mtime":1632976327209},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiaGVsbG8iCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzdmciLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IFtfaG9pc3RlZF8yXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBfaG9pc3RlZF8zKTsKfQ=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;8BACZ,mBAAA,CAAY,KAAZ,EAAY,IAAZ,EAAY,IAAZ,EAAY,CAAA;AAAA;AAAZ,C;;kBAAA,U;;uBADC,mBAAA,CAEM,KAFN,EAAA,UAAA,EAEM,UAFN,C","sourcesContent":["<template>\n  <div class=\"hello\">\n\t<svg> </svg>\t\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  data() {\r\n  \tlet thisdata;\r\n  \r\n  \tfunction readTextFile(file) {\r\n  \t\tvar rawFile = new XMLHttpRequest();\r\n  \t\trawFile.open(\"GET\", file, false);\r\n  \t\trawFile.onreadystatechange = function () {\r\n  \t\t\tif (rawFile.readyState === 4) {\r\n  \t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\r\n  \t\t\t\t\tthisdata = rawFile.responseText;\r\n  \t\t\t\t\t// alert(allText);\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\trawFile.send(null);\r\n  \t}\r\n  \r\n  \treadTextFile(\"F1A_Data.csv\");\r\n  \r\n  \tvar data = d3.csvParse(thisdata, function (d, i, columns) {\r\n  \t\treturn (d3.autoType(d), d.total = d3.sum(columns, c => d[c]), d)\r\n  \t}).sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n  \r\n      console.log(\"mounted!\");\r\n  \r\n  \treturn {\r\n  \t\tdata,\r\n  \t}\r\n  },\r\n  // mounted() {\r\n  \r\n  // \tlet count = 0;\r\n  \r\n  // \tlet series = d3.stack()\r\n  // \t\t.keys(this.data.columns.slice(1))\r\n  // \t\t.offset(d3.stackOffsetExpand)\r\n  // \t\t(this.data)\r\n  // \t\t.map(d => (d.forEach(v => v.key = d.key), d));\r\n  \r\n  // \tlet color = d3.scaleOrdinal()\r\n  // \t\t.domain(series.map(d => d.key))\r\n  // \t\t.range(d3.schemeSpectral[series.length])\r\n  // \t\t.unknown(\"#ccc\");\r\n  \r\n  // \tlet margin = ({\r\n  // \t\ttop: 30,\r\n  // \t\tright: 10,\r\n  // \t\tbottom: 0,\r\n  // \t\tleft: 30\r\n  // \t});\r\n  \r\n  // \tlet width = 1330;\r\n  // \tlet height = this.data.length * 25 + margin.top + margin.bottom;\r\n  // \t// console.log(height);\r\n  \r\n  // \tlet svg = d3.select(\"svg\")\r\n  // \t\t.attr(\"viewBox\", [0, 0, width, height])\r\n  // \t\t.style(\"overflow\", \"visible\");\r\n  \r\n  // \tlet y = d3.scaleBand()\r\n  // \t\t.domain(this.data.map(d => d.name))\r\n  // \t\t.range([margin.top, height - margin.bottom])\r\n  // \t\t.padding(0.08);\r\n  \r\n  // \tlet x = d3.scaleLinear()\r\n  // \t\t.range([margin.left, width - margin.right]);\r\n  \r\n  // \tlet formatValue = x => isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\");\r\n  \r\n  // \tlet formatPercent = d3.format(\".1%\");\r\n  \r\n  // \t// let arr_j = new Array(); let j = 0; let postfix = \"\";\r\n  // \t// let length_y = series[0].length;\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.selectAll(\"g\")\r\n  // \t\t.data(series)\r\n  // \t\t.enter().append(\"g\")\r\n  // \t\t.attr(\"fill\", function (d, i) {\r\n  // \t\t\t// if (i + 1 == 1) arr_j[j++] = i + 1 + 'a'; // ???\r\n  // \t\t\t// else if (i + 1 == 2) arr_j[j++] = i + 'b';\r\n  // \t\t\t// else arr_j[j++] = i;\r\n  // \t\t\t// // console.log(i);\r\n  // \t\t\treturn color(d.key);\r\n  // \t\t})\r\n  // \t\t.selectAll(\"rect\")\r\n  // \t\t.data(function (d) {  return d; }) //j = 0;\r\n  // \t\t.join(\"rect\")\r\n  // \t\t.attr(\"id\", function (d, i) {\r\n  // \t\t\treturn \"rect_\"+\"0\";\r\n  // \t\t})\r\n  // \t\t.attr(\"class\", (d => `${d.data.name}${d.key}`))\r\n  // \t\t.attr(\"x\", d => x(d[0]))\r\n  // \t\t.attr(\"y\", (d, i) => y(d.data.name))\r\n  // \t\t.attr(\"width\", d => x(d[1]) - x(d[0]))\r\n  // \t\t.attr(\"height\", y.bandwidth());\r\n  \r\n  // \tsvg.selectAll(\"rect\")\r\n  // \t\t.on(\"mouseover\", function (d, i) {\r\n  // \t\t\td3.select(this)\r\n  // \t\t\t\t.attr(\"fill\", \"yellow\")\r\n  // \t\t\t\t.append(\"title\")\r\n  // \t\t\t\t.text(d => `${d.data.name} ${d.key}\r\n  // \t\t\t\t\t\t\t\t${formatPercent(d[1] - d[0])} (${formatValue(d.data[d.key])})`);\r\n  // \t\t})\r\n  // \t\t.on(\"mouseout\", function (d, i) {\r\n  // \t\t\td3.select(this)\r\n  // \t\t\t\t.transition()\r\n  // \t\t\t\t.duration(500)\r\n  // \t\t\t\t.attr(\"fill\", d => color(d.key));\r\n  // \t\t});;\r\n  \r\n  // \tlet yAxis = g => g\r\n  // \t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n  // \t\t.call(d3.axisLeft(y).tickSizeOuter(0))\r\n  // \t\t.call(g => g.selectAll(\".domain\").remove());\r\n  \r\n  // \tlet xAxis = g => g\r\n  // \t\t.attr(\"transform\", `translate(0,${margin.top})`)\r\n  // \t\t.call(d3.axisTop(x).ticks(width / 100, \"%\"))\r\n  // \t\t.call(g => g.selectAll(\".domain\").remove());\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.call(xAxis);\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.call(yAxis);\r\n      \r\n  // },\n}\n</script>"],"sourceRoot":""}]}