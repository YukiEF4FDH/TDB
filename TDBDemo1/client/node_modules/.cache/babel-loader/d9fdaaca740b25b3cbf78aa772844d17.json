{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue","mtime":1637026400152},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgKiBhcyBkMyBmcm9tICJkMyI7CmltcG9ydCBTdGFja2VkQmFyIGZyb20gIkAvY29tcG9uZW50cy9WaXN1YWxpemF0aW9uL1N0YWNrZWROb3JtYWxpemVkSG9yaXpvbnRhbEJhci52dWUiOwp2YXIgZjFhRGF0YSA9ICJkZWZhdWx0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZWMxQ2hhcnQwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIGRhdGEgPSBudWxsOwogICAgcmV0dXJuIHsKICAgICAgZGF0YTogZGF0YQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHt9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIC8vIGxldCBzZXJpZXMgPSBkMwogICAgICAvLyAgIC5zdGFjaygpCiAgICAgIC8vICAgLmtleXModGhpcy5kYXRhLmNvbHVtbnMuc2xpY2UoMSkpCiAgICAgIC8vICAgLm9mZnNldChkMy5zdGFja09mZnNldEV4cGFuZCkodGhpcy5kYXRhKQogICAgICAvLyAgIC5tYXAoKGQpID0+IChkLmZvckVhY2goKHYpID0+ICh2LmtleSA9IGQua2V5KSksIGQpKTsKICAgICAgLy8gbGV0IGNvbG9yID0gZDMKICAgICAgLy8gICAuc2NhbGVPcmRpbmFsKCkKICAgICAgLy8gICAuZG9tYWluKHNlcmllcy5tYXAoKGQpID0+IGQua2V5KSkKICAgICAgLy8gICAucmFuZ2UoZDMuc2NoZW1lU3BlY3RyYWxbc2VyaWVzLmxlbmd0aF0pCiAgICAgIC8vICAgLnVua25vd24oIiNjY2MiKTsKICAgICAgLy8gbGV0IG1hcmdpbiA9IHsKICAgICAgLy8gICB0b3A6IDAsCiAgICAgIC8vICAgcmlnaHQ6IDAsCiAgICAgIC8vICAgYm90dG9tOiAwLAogICAgICAvLyAgIGxlZnQ6IDAsCiAgICAgIC8vIH07CiAgICAgIC8vIGxldCB3aWR0aCA9IDEzMzA7CiAgICAgIC8vIGxldCBoZWlnaHQgPSB0aGlzLmRhdGEubGVuZ3RoICogMzMgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbTsKICAgICAgLy8gLy8gY29uc29sZS5sb2coaGVpZ2h0KTsKICAgICAgLy8gbGV0IHN2ZyA9IGQzCiAgICAgIC8vICAgLnNlbGVjdCgiI3N2ZzEiKQogICAgICAvLyAgIC5hdHRyKCJ2aWV3Qm94IiwgWzAsIDAsIHdpZHRoLCBoZWlnaHRdKQogICAgICAvLyAgIC5zdHlsZSgib3ZlcmZsb3ciLCAidmlzaWJsZSIpOwogICAgICAvLyBsZXQgeSA9IGQzCiAgICAgIC8vICAgLnNjYWxlQmFuZCgpCiAgICAgIC8vICAgLmRvbWFpbih0aGlzLmRhdGEubWFwKChkKSA9PiBkLm1vbnRoKSkKICAgICAgLy8gICAucmFuZ2UoW21hcmdpbi50b3AsIGhlaWdodCAtIG1hcmdpbi5ib3R0b21dKQogICAgICAvLyAgIC5wYWRkaW5nKDAuMDgpOwogICAgICAvLyBsZXQgeCA9IGQzLnNjYWxlTGluZWFyKCkucmFuZ2UoW21hcmdpbi5sZWZ0LCB3aWR0aCAtIG1hcmdpbi5yaWdodF0pOwogICAgICAvLyBsZXQgZm9ybWF0VmFsdWUgPSAoeCkgPT4gKGlzTmFOKHgpID8gIk4vQSIgOiB4LnRvTG9jYWxlU3RyaW5nKCJlbiIpKTsKICAgICAgLy8gbGV0IGZvcm1hdFBlcmNlbnQgPSBkMy5mb3JtYXQoIi4xJSIpOwogICAgICAvLyBsZXQgYXJyX2ogPSBuZXcgQXJyYXkoKTsKICAgICAgLy8gbGV0IGogPSAwOwogICAgICAvLyBsZXQgcG9zdGZpeCA9ICIiOwogICAgICAvLyBsZXQgbGVuZ3RoX3kgPSBzZXJpZXNbMF0ubGVuZ3RoOwogICAgICAvLyBzdmcKICAgICAgLy8gICAuYXBwZW5kKCJnIikKICAgICAgLy8gICAuc2VsZWN0QWxsKCJnIikKICAgICAgLy8gICAuZGF0YShzZXJpZXMpCiAgICAgIC8vICAgLmVudGVyKCkKICAgICAgLy8gICAuYXBwZW5kKCJnIikKICAgICAgLy8gICAuYXR0cigiZmlsbCIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgIC8vICAgICBpZiAoaSArIDEgPT0gMSkgYXJyX2pbaisrXSA9IGkgKyAxICsgImEiOwogICAgICAvLyAgICAgLy8gPz8/CiAgICAgIC8vICAgICBlbHNlIGlmIChpICsgMSA9PSAyKSBhcnJfaltqKytdID0gaSArICJiIjsKICAgICAgLy8gICAgIGVsc2UgYXJyX2pbaisrXSA9IGk7CiAgICAgIC8vICAgICAvLyBjb25zb2xlLmxvZyhpKTsKICAgICAgLy8gICAgIHJldHVybiBjb2xvcihkLmtleSk7CiAgICAgIC8vICAgfSkKICAgICAgLy8gICAuc2VsZWN0QWxsKCJyZWN0IikKICAgICAgLy8gICAuZGF0YShmdW5jdGlvbiAoZCkgewogICAgICAvLyAgICAgaiA9IDA7CiAgICAgIC8vICAgICByZXR1cm4gZDsKICAgICAgLy8gICB9KQogICAgICAvLyAgIC5qb2luKCJyZWN0IikKICAgICAgLy8gICAuYXR0cigiaWQiLCBmdW5jdGlvbiAoZCwgaSkgewogICAgICAvLyAgICAgbGV0IGlkID0gIiI7CiAgICAgIC8vICAgICBpZiAoaiAlIGxlbmd0aF95ID09IDApIHsKICAgICAgLy8gICAgICAgcG9zdGZpeCA9IGFycl9qW2ogLyBsZW5ndGhfeV07CiAgICAgIC8vICAgICAgIGlkID0gIkYxQV8iICsgKGkgKyAxKSArICJfIiArIHBvc3RmaXg7CiAgICAgIC8vICAgICB9IGVsc2UgewogICAgICAvLyAgICAgICBpZCA9ICJGMUFfIiArIChpICsgMSkgKyAiXyIgKyBwb3N0Zml4OwogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coIkYxQV8iICsgKGkgKyAxKSArICJfIiArIGFycl9qWyhqKSAvIGxlbmd0aF95XSk7CiAgICAgIC8vICAgICBqKys7CiAgICAgIC8vICAgICByZXR1cm4gaWQ7CiAgICAgIC8vICAgfSkKICAgICAgLy8gICAuYXR0cigiY2xhc3MiLCAoZCkgPT4gYCR7ZC5kYXRhLm1vbnRofSR7ZC5rZXl9YCkKICAgICAgLy8gICAuYXR0cigieCIsIChkKSA9PiB4KGRbMF0pKQogICAgICAvLyAgIC5hdHRyKCJ5IiwgKGQpID0+IHkoZC5kYXRhLm1vbnRoKSkKICAgICAgLy8gICAuYXR0cigid2lkdGgiLCAoZCkgPT4geChkWzFdKSAtIHgoZFswXSkpCiAgICAgIC8vICAgLmF0dHIoImhlaWdodCIsIHkuYmFuZHdpZHRoKCkpOwogICAgICAvLyB2YXIgZm9udDsKICAgICAgLy8gc3ZnCiAgICAgIC8vICAgLnNlbGVjdEFsbCgicmVjdCIpCiAgICAgIC8vICAgLm9uKCJtb3VzZW92ZXIiLCBmdW5jdGlvbiAoKSB7CiAgICAgIC8vICAgICAvLyBjb25zb2xlLmxvZyh0aGlzKTsKICAgICAgLy8gICAgIC8vIGNvbnNvbGUubG9nKGQzLnNlbGVjdCh0aGlzKS5fZ3JvdXBzWzBdKTsKICAgICAgLy8gICAgIGQzLnNlbGVjdCh0aGlzKQogICAgICAvLyAgICAgICAuYXR0cigiZmlsbCIsICJ5ZWxsb3ciKQogICAgICAvLyAgICAgICAuYXBwZW5kKCJ0aXRsZSIpCiAgICAgIC8vICAgICAgIC50ZXh0KAogICAgICAvLyAgICAgICAgIChkKSA9PiBgJHtkLmRhdGEubW9udGh9ICR7ZC5rZXl9CiAgICAgIC8vIAkJCQkJCQkJJHtmb3JtYXRQZXJjZW50KGRbMV0gLSBkWzBdKX0gKCR7Zm9ybWF0VmFsdWUoZC5kYXRhW2Qua2V5XSl9KWAKICAgICAgLy8gICAgICAgKTsKICAgICAgLy8gICAgIGZvbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGVzdDAiKS5zdHlsZS5mb250OwogICAgICAvLyAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRlc3QwIikuc3R5bGUuZm9udCA9CiAgICAgIC8vICAgICAgICJpdGFsaWMgMjBweCBhcmlhbCxzZXJpZiI7CiAgICAgIC8vICAgfSkKICAgICAgLy8gICAub24oIm1vdXNlb3V0IiwgZnVuY3Rpb24gKCkgewogICAgICAvLyAgICAgZDMuc2VsZWN0KHRoaXMpCiAgICAgIC8vICAgICAgIC50cmFuc2l0aW9uKCkKICAgICAgLy8gICAgICAgLmR1cmF0aW9uKDUwMCkKICAgICAgLy8gICAgICAgLmF0dHIoImZpbGwiLCAoZCkgPT4gY29sb3IoZC5rZXkpKTsKICAgICAgLy8gICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0ZXN0MCIpLnN0eWxlLmZvbnQgPSBmb250OwogICAgICAvLyAgIH0pOwogICAgICAvLyBsZXQgeUF4aXMgPSAoZykgPT4KICAgICAgLy8gICBnCiAgICAgIC8vICAgICAuYXR0cigidHJhbnNmb3JtIiwgYHRyYW5zbGF0ZSgke21hcmdpbi5sZWZ0fSwwKWApCiAgICAgIC8vICAgICAuY2FsbChkMy5heGlzTGVmdCh5KS50aWNrU2l6ZU91dGVyKDApKQogICAgICAvLyAgICAgLmNhbGwoKGcpID0+IGcuc2VsZWN0QWxsKCIuZG9tYWluIikucmVtb3ZlKCkpOwogICAgICAvLyBsZXQgeEF4aXMgPSAoZykgPT4KICAgICAgLy8gICBnCiAgICAgIC8vICAgICAuYXR0cigidHJhbnNmb3JtIiwgYHRyYW5zbGF0ZSgwLCR7bWFyZ2luLnRvcH0pYCkKICAgICAgLy8gICAgIC5jYWxsKGQzLmF4aXNUb3AoeCkudGlja3Mod2lkdGggLyAxMDAsICIlIikpCiAgICAgIC8vICAgICAuY2FsbCgoZykgPT4gZy5zZWxlY3RBbGwoIi5kb21haW4iKS5yZW1vdmUoKSk7CiAgICAgIC8vIHN2Zy5hcHBlbmQoImciKS5jYWxsKHhBeGlzKTsKICAgICAgLy8gc3ZnLmFwcGVuZCgiZyIpLmNhbGwoeUF4aXMpOwogICAgICBTdGFja2VkQmFyLm1ldGhvZHMuZHJhdyh0aGlzLmRhdGEpOwogICAgfSwKICAgIGRyYXdDdXJ2ZWRMaW5lOiBmdW5jdGlvbiBkcmF3Q3VydmVkTGluZSgpIHsvLyBjb25zdCBwb2ludHMgPSBbWzAsIDBdLCBbMTAsIDEwXSwgWzIwLCA1MF0sIFszMDAsIDE1MF1dOwogICAgICAvLyBjb25zdCBjdXJ2ZSA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOwogICAgICAvLyBkMy5zZWxlY3QoKS5zZWxlY3QoIiNzdmcxIikuYXBwZW5kKCdwYXRoJykKICAgICAgLy8gLmF0dHIoJ2QnLCBjdXJ2ZShwb2ludHMpKQogICAgICAvLyAuYXR0cignc3Ryb2tlJywgJ2JsYWNrJykKICAgICAgLy8gLy8gd2l0aCBtdWx0aXBsZSBwb2ludHMgZGVmaW5lZCwgaWYgeW91IGxlYXZlIG91dCBmaWxsOm5vbmUsCiAgICAgIC8vIC8vIHRoZSBvdmVybGFwcGluZyBzcGFjZSBkZWZpbmVkIGJ5IHRoZSBwb2ludHMgaXMgZmlsbGVkIHdpdGgKICAgICAgLy8gLy8gdGhlIGRlZmF1bHQgdmFsdWUgb2YgJ2JsYWNrJwogICAgICAvLyAuYXR0cignZmlsbCcsICdub25lJyk7CiAgICB9LAogICAgZ2V0RjFBSnNvbjogZnVuY3Rpb24gZ2V0RjFBSnNvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9mMWEtanNvbiI7CiAgICAgIGF4aW9zLmdldChwYXRoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBmMWFEYXRhID0gcmVzLmRhdGE7CgogICAgICAgIGlmIChmMWFEYXRhICE9ICJkZWZhdWx0IikgewogICAgICAgICAgZjFhRGF0YSA9IEpTT04ucGFyc2UoZjFhRGF0YSk7CiAgICAgICAgICB2YXIgY29sdW1ucyA9IE9iamVjdC5rZXlzKGYxYURhdGFbMF0pOwogICAgICAgICAgY29sdW1ucyA9IGNvbHVtbnMuc2xpY2UoMCwgY29sdW1ucy5sZW5ndGggLSAxKTsgLy8gLy8gY29uc29sZS5sb2coY29sdW1ucyk7CgogICAgICAgICAgZjFhRGF0YS5jb2x1bW5zID0gY29sdW1uczsgLy8gY29uc29sZS5sb2coImYxYURhdGEiKTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGYxYURhdGEpOwogICAgICAgICAgLy8gZjFhRGF0YSA9IGYxYURhdGEuc29ydCgoYSwgYikgPT4gYlsxXSAvIGIudG90YWwgLSBhWzFdIC8gYS50b3RhbCk7CgogICAgICAgICAgZjFhRGF0YSA9IGYxYURhdGEuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICByZXR1cm4gYlsxXSAvIGIudG90YWwgLSBhWzFdIC8gYS50b3RhbDsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMuZGF0YSA9IGYxYURhdGE7CgogICAgICAgICAgX3RoaXMuZHJhdygpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0RjFBSnNvbigpOyAvLyB0aGlzLmRyYXdDdXJ2ZWRMaW5lKCk7CiAgfQp9Ow=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-16_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue"],"names":[],"mappings":";;;AAWA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AACA,OAAO,UAAP,MAAuB,+DAAvB;AAEA,IAAI,OAAM,GAAI,SAAd;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,YADO;AAEb,EAAA,IAFa,kBAEN;AACL,QAAI,IAAG,GAAI,IAAX;AACA,WAAO;AACL,MAAA,IAAI,EAAJ;AADK,KAAP;AAGD,GAPY;AAQb,EAAA,UAAU,EAAE,EARC;AASb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AACL;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACG;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA,MAAA,UAAU,CAAC,OAAX,CAAmB,IAAnB,CAAwB,KAAK,IAA7B;AACD,KAjIM;AAkIP,IAAA,cAlIO,4BAkIU,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KA5IM;AA6IP,IAAA,UA7IO,wBA6IM;AAAA;;AACX,UAAM,IAAG,GAAI,gCAAb;AACA,MAAA,KAAI,CACD,GADH,CACO,IADP,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAS;AACb,QAAA,OAAM,GAAI,GAAG,CAAC,IAAd;;AACA,YAAI,OAAM,IAAK,SAAf,EAA0B;AACxB,UAAA,OAAM,GAAI,IAAI,CAAC,KAAL,CAAW,OAAX,CAAV;AACA,cAAI,OAAM,GAAI,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,CAAD,CAAnB,CAAd;AACA,UAAA,OAAM,GAAI,OAAO,CAAC,KAAR,CAAc,CAAd,EAAiB,OAAO,CAAC,MAAR,GAAiB,CAAlC,CAAV,CAHwB,CAIxB;;AACA,UAAA,OAAO,CAAC,OAAR,GAAkB,OAAlB,CALwB,CAMxB;AACA;AAEA;;AACA,UAAA,OAAM,GAAI,OAAO,CAAC,IAAR,CAAa,UAAC,CAAD,EAAI,CAAJ;AAAA,mBAAU,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,KAAT,GAAiB,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,KAApC;AAAA,WAAb,CAAV;AACA,UAAA,KAAI,CAAC,IAAL,GAAY,OAAZ;;AACA,UAAA,KAAI,CAAC,IAAL;AACF;AACD,OAlBH,EAmBG,KAnBH,CAmBS,UAAC,KAAD,EAAW;AAChB,QAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACD,OArBH;AAsBD;AArKM,GATI;AAgLb,EAAA,OAhLa,qBAgLH;AACR,SAAK,UAAL,GADQ,CAER;AACD;AAnLY,CAAf","sourcesContent":["<template>\r\n  <div id=\"Sec1-Chart0\" class=\"rightC\">\r\n    <svg id=\"svg1\"></svg>\r\n    <chart-info>新型コロナウイルス感染症による業績への影響</chart-info>\r\n  </div>\r\n  <!-- \t<Sec2Text>what</Sec2Text>\r\n\t<Sec1Text></Sec1Text> -->\r\n  <!-- <svg id=\"svgCurve2\"></svg> -->\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport StackedBar from \"@/components/Visualization/StackedNormalizedHorizontalBar.vue\"\r\n\r\nvar f1aData = \"default\";\r\n\r\nexport default {\r\n  name: \"Sec1Chart0\",\r\n  data() {\r\n    var data = null;\r\n    return {\r\n      data,\r\n    };\r\n  },\r\n  components: {},\r\n  methods: {\r\n    draw() {\r\n      // let series = d3\r\n      //   .stack()\r\n      //   .keys(this.data.columns.slice(1))\r\n      //   .offset(d3.stackOffsetExpand)(this.data)\r\n      //   .map((d) => (d.forEach((v) => (v.key = d.key)), d));\r\n\r\n      // let color = d3\r\n      //   .scaleOrdinal()\r\n      //   .domain(series.map((d) => d.key))\r\n      //   .range(d3.schemeSpectral[series.length])\r\n      //   .unknown(\"#ccc\");\r\n\r\n      // let margin = {\r\n      //   top: 0,\r\n      //   right: 0,\r\n      //   bottom: 0,\r\n      //   left: 0,\r\n      // };\r\n\r\n      // let width = 1330;\r\n      // let height = this.data.length * 33 + margin.top + margin.bottom;\r\n      // // console.log(height);\r\n\r\n      // let svg = d3\r\n      //   .select(\"#svg1\")\r\n      //   .attr(\"viewBox\", [0, 0, width, height])\r\n      //   .style(\"overflow\", \"visible\");\r\n\r\n      // let y = d3\r\n      //   .scaleBand()\r\n      //   .domain(this.data.map((d) => d.month))\r\n      //   .range([margin.top, height - margin.bottom])\r\n      //   .padding(0.08);\r\n\r\n      // let x = d3.scaleLinear().range([margin.left, width - margin.right]);\r\n\r\n      // let formatValue = (x) => (isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\"));\r\n\r\n      // let formatPercent = d3.format(\".1%\");\r\n\r\n      // let arr_j = new Array();\r\n      // let j = 0;\r\n      // let postfix = \"\";\r\n      // let length_y = series[0].length;\r\n\r\n      // svg\r\n      //   .append(\"g\")\r\n      //   .selectAll(\"g\")\r\n      //   .data(series)\r\n      //   .enter()\r\n      //   .append(\"g\")\r\n      //   .attr(\"fill\", function (d, i) {\r\n      //     if (i + 1 == 1) arr_j[j++] = i + 1 + \"a\";\r\n      //     // ???\r\n      //     else if (i + 1 == 2) arr_j[j++] = i + \"b\";\r\n      //     else arr_j[j++] = i;\r\n      //     // console.log(i);\r\n      //     return color(d.key);\r\n      //   })\r\n      //   .selectAll(\"rect\")\r\n      //   .data(function (d) {\r\n      //     j = 0;\r\n      //     return d;\r\n      //   })\r\n      //   .join(\"rect\")\r\n      //   .attr(\"id\", function (d, i) {\r\n      //     let id = \"\";\r\n      //     if (j % length_y == 0) {\r\n      //       postfix = arr_j[j / length_y];\r\n      //       id = \"F1A_\" + (i + 1) + \"_\" + postfix;\r\n      //     } else {\r\n      //       id = \"F1A_\" + (i + 1) + \"_\" + postfix;\r\n      //     }\r\n      //     // console.log(\"F1A_\" + (i + 1) + \"_\" + arr_j[(j) / length_y]);\r\n      //     j++;\r\n      //     return id;\r\n      //   })\r\n      //   .attr(\"class\", (d) => `${d.data.month}${d.key}`)\r\n      //   .attr(\"x\", (d) => x(d[0]))\r\n      //   .attr(\"y\", (d) => y(d.data.month))\r\n      //   .attr(\"width\", (d) => x(d[1]) - x(d[0]))\r\n      //   .attr(\"height\", y.bandwidth());\r\n\r\n      // var font;\r\n\r\n      // svg\r\n      //   .selectAll(\"rect\")\r\n      //   .on(\"mouseover\", function () {\r\n      //     // console.log(this);\r\n      //     // console.log(d3.select(this)._groups[0]);\r\n      //     d3.select(this)\r\n      //       .attr(\"fill\", \"yellow\")\r\n      //       .append(\"title\")\r\n      //       .text(\r\n      //         (d) => `${d.data.month} ${d.key}\r\n\t\t\t// \t\t\t\t\t\t\t\t${formatPercent(d[1] - d[0])} (${formatValue(d.data[d.key])})`\r\n      //       );\r\n\r\n      //     font = document.getElementById(\"test0\").style.font;\r\n      //     document.getElementById(\"test0\").style.font =\r\n      //       \"italic 20px arial,serif\";\r\n      //   })\r\n      //   .on(\"mouseout\", function () {\r\n      //     d3.select(this)\r\n      //       .transition()\r\n      //       .duration(500)\r\n      //       .attr(\"fill\", (d) => color(d.key));\r\n\r\n      //     document.getElementById(\"test0\").style.font = font;\r\n      //   });\r\n\r\n      // let yAxis = (g) =>\r\n      //   g\r\n      //     .attr(\"transform\", `translate(${margin.left},0)`)\r\n      //     .call(d3.axisLeft(y).tickSizeOuter(0))\r\n      //     .call((g) => g.selectAll(\".domain\").remove());\r\n\r\n      // let xAxis = (g) =>\r\n      //   g\r\n      //     .attr(\"transform\", `translate(0,${margin.top})`)\r\n      //     .call(d3.axisTop(x).ticks(width / 100, \"%\"))\r\n      //     .call((g) => g.selectAll(\".domain\").remove());\r\n\r\n      // svg.append(\"g\").call(xAxis);\r\n\r\n      // svg.append(\"g\").call(yAxis);\r\n      StackedBar.methods.draw(this.data);\r\n    },\r\n    drawCurvedLine() {\r\n      // const points = [[0, 0], [10, 10], [20, 50], [300, 150]];\r\n      // const curve = d3.line().curve(d3.curveNatural);\r\n      // d3.select().select(\"#svg1\").append('path')\r\n      // .attr('d', curve(points))\r\n      // .attr('stroke', 'black')\r\n      // // with multiple points defined, if you leave out fill:none,\r\n      // // the overlapping space defined by the points is filled with\r\n      // // the default value of 'black'\r\n      // .attr('fill', 'none');\r\n    },\r\n    getF1AJson() {\r\n      const path = \"http://127.0.0.1:5000/f1a-json\";\r\n      axios\r\n        .get(path)\r\n        .then((res) => {\r\n          f1aData = res.data;\r\n          if (f1aData != \"default\") {\r\n            f1aData = JSON.parse(f1aData);\r\n            var columns = Object.keys(f1aData[0]);\r\n            columns = columns.slice(0, columns.length - 1);\r\n            // // console.log(columns);\r\n            f1aData.columns = columns;\r\n            // console.log(\"f1aData\");\r\n            // console.log(f1aData);\r\n\r\n            // f1aData = f1aData.sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n            f1aData = f1aData.sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n            this.data = f1aData;\r\n            this.draw();\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getF1AJson();\r\n    // this.drawCurvedLine();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nchart-info {\r\n  font-size: 14px;\r\n  color: #0000ff;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 30%;\r\n}\r\n.rightC {\r\n  margin-left: 42%;\r\n  margin-top: -17%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"],"sourceRoot":""}]}