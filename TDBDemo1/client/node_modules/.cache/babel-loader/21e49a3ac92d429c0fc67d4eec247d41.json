{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue","mtime":1636389954878},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwppbXBvcnQgVGVzdEN1cnZlMSBmcm9tICJAL2NvbXBvbmVudHMvVGVzdEN1cnZlMS52dWUiOwppbXBvcnQgVGVzdEN1cnZlMiBmcm9tICJAL2NvbXBvbmVudHMvVGVzdEN1cnZlMi52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3RDdXJ2ZSIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBwb2ludFN0ciA9ICJbWzAsMF0sWzQwMywyM10sWzM1LDM1XSxbMTAsMTBdXSI7CiAgICB2YXIgZGF0YSA9IEpTT04ucGFyc2UocG9pbnRTdHIpOwogICAgcmV0dXJuIHsKICAgICAgZGF0YTogZGF0YQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFRlc3RDdXJ2ZTE6IFRlc3RDdXJ2ZTEsCiAgICBUZXN0Q3VydmUyOiBUZXN0Q3VydmUyCiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3OiBmdW5jdGlvbiBkcmF3KCkgewogICAgICB2YXIgcG9pbnRzID0gW107IC8vIGNvbnN0IHRhcmdldF9jb3B5ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kYXRhKTsKICAgICAgLy8gZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpCiAgICAgIC8vIHsKICAgICAgLy8gICBjb25zb2xlLmxvZyh0YXJnZXRfY29weVt0aGluZ11bMF0rIiwiK3RhcmdldF9jb3B5W3RoaW5nXVsxXSk7CiAgICAgIC8vICAgcG9pbnRzLnB1c2gobmV3IEFycmF5KHRhcmdldF9jb3B5W3RoaW5nXVswXSx0YXJnZXRfY29weVt0aGluZ11bMV0pKTsKICAgICAgLy8gfQogICAgICAvLyBjb25zb2xlLmxvZyhwb2ludHMpOwoKICAgICAgdmFyIHBvaW50czEgPSBUZXN0Q3VydmUxLmRhdGEoKTsKICAgICAgY29uc29sZS5sb2cocG9pbnRzMSk7CgogICAgICBmb3IgKHZhciB0aGluZyBpbiBwb2ludHMxLmRhdGEpIHsKICAgICAgICAvL3BvaW50cy5wdXNoKHBvaW50czEuZGF0YVt0aGluZ10pOyAgb2sKICAgICAgICB2YXIgZDEgPSBwb2ludHMxLmRhdGFbdGhpbmddWzBdICsgNTsKICAgICAgICB2YXIgZDIgPSBwb2ludHMxLmRhdGFbdGhpbmddWzFdICsgNTsKICAgICAgICBwb2ludHMucHVzaChuZXcgQXJyYXkoZDEsIGQyKSk7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKHBvaW50cyk7CiAgICAgIHZhciBjdXJ2ZSA9IGQzLmxpbmUoKS5jdXJ2ZShkMy5jdXJ2ZU5hdHVyYWwpOwogICAgICBkMy5zZWxlY3QoIiNkaXZDdXJ2ZSIpLmFwcGVuZCgic3ZnIikuYXR0cigiaWQiLCAic3ZnQ3VydmUiKTsKICAgICAgZDMuc2VsZWN0KCIjc3ZnQ3VydmUiKS5hcHBlbmQoInBhdGgiKS5hdHRyKCJkIiwgY3VydmUocG9pbnRzKSkuYXR0cigic3Ryb2tlIiwgImJsYWNrIikuYXR0cigiZmlsbCIsICJub25lIik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3KCk7CiAgfQp9Ow=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve.vue"],"names":[],"mappings":"AAQA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,UAAP,MAAuB,6BAAvB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,IAFa,kBAEN;AACL,QAAI,QAAO,GAAI,kCAAf;AACA,QAAI,IAAG,GAAI,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX;AAEA,WAAO;AAAE,MAAA,IAAG,EAAH;AAAF,KAAP;AACD,GAPY;AAQb,EAAA,UAAU,EAAE;AAAE,IAAA,UAAU,EAAV,UAAF;AAAa,IAAA,UAAS,EAAT;AAAb,GARC;AASb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AACL,UAAI,MAAK,GAAI,EAAb,CADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAI,OAAM,GAAI,UAAU,CAAC,IAAX,EAAd;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;;AACA,WAAK,IAAI,KAAT,IAAkB,OAAO,CAAC,IAA1B,EACA;AACE;AACA,YAAI,EAAC,GAAI,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,CAApB,IAAuB,CAAhC;AACA,YAAI,EAAC,GAAI,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,CAApB,IAAuB,CAAhC;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAI,KAAJ,CAAU,EAAV,EAAa,EAAb,CAAZ;AACF;;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AAEA,UAAM,KAAI,GAAI,EAAE,CAAC,IAAH,GAAU,KAAV,CAAgB,EAAE,CAAC,YAAnB,CAAd;AAEA,MAAA,EAAE,CAAC,MAAH,CAAU,WAAV,EAAuB,MAAvB,CAA8B,KAA9B,EAAqC,IAArC,CAA0C,IAA1C,EAAgD,UAAhD;AAEA,MAAA,EAAE,CAAC,MAAH,CAAU,WAAV,EACG,MADH,CACU,MADV,EAEG,IAFH,CAEQ,GAFR,EAEa,KAAK,CAAC,MAAD,CAFlB,EAGG,IAHH,CAGQ,QAHR,EAGkB,OAHlB,EAIG,IAJH,CAIQ,MAJR,EAIgB,MAJhB;AAKD;AA/BM,GATI;AA0Cb,EAAA,OA1Ca,qBA0CH;AACR,SAAK,IAAL;AACD;AA5CY,CAAf","sourcesContent":["<template>\r\n  <svg id=\"svgCurve\">\r\n    <!-- <TestCurve1/> -->\r\n    <TestCurve2/>\r\n  </svg>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport TestCurve1 from \"@/components/TestCurve1.vue\";\r\nimport TestCurve2 from \"@/components/TestCurve2.vue\";\r\n\r\nexport default {\r\n  name: \"TestCurve\",\r\n  data() {\r\n    let pointStr = \"[[0,0],[403,23],[35,35],[10,10]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n    return { data };\r\n  },\r\n  components: { TestCurve1,TestCurve2 },\r\n  methods: {\r\n    draw() {\r\n      var points = [];\r\n      // const target_copy = Object.assign({}, this.data);\r\n      // for (var thing in target_copy)\r\n      // {\r\n      //   console.log(target_copy[thing][0]+\",\"+target_copy[thing][1]);\r\n      //   points.push(new Array(target_copy[thing][0],target_copy[thing][1]));\r\n      // }\r\n      // console.log(points);\r\n\r\n      var points1 = TestCurve1.data();\r\n      console.log(points1);\r\n      for (var thing in points1.data) \r\n      {\r\n        //points.push(points1.data[thing]);  ok\r\n        var d1 = points1.data[thing][0]+5;\r\n        var d2 = points1.data[thing][1]+5;\r\n        points.push(new Array(d1,d2));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n\r\n      d3.select(\"#divCurve\").append(\"svg\").attr(\"id\", \"svgCurve\");\r\n\r\n      d3.select(\"#svgCurve\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"none\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>  \r\n\r\n<style>\r\n</style>"],"sourceRoot":""}]}