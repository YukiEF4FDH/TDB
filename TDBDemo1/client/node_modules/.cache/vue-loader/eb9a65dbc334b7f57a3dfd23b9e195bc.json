{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue?vue&type=style&index=0&id=b4336c40&scope=true&lang=css","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue","mtime":1636552889968},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojY29udGFpbmVyIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBib3JkZXI6IDJweCBzb2xpZCByZWQ7DQp9DQojb3ZlcmxheSB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47DQogIGZpbGw6IGdyZWVuOw0KfQ0KI215Q2FudmFzMiB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgYm9yZGVyOiAycHggc29saWQgb3JhbmdlOw0KfQ0KI3N2Z0N1cnZlMCB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgYm9yZGVyOiAycHggc29saWQgb3JhbmdlOw0KICBmaWxsOiBvcmFuZ2U7DQp9DQovKiAjb3ZlcmxheUIgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogMTBweDsNCiAgbGVmdDogNTBweDsNCiAgYm9yZGVyOiAycHggc29saWQgYmx1ZTsNCn0gKi8NCiNzdmdDdXJ2ZTEgew0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGJvcmRlcjogMnB4IGRhc2hlZCBibHVlOw0KICB3aWR0aDogMzAwcHg7DQogIGhlaWdodDogMTIwcHg7DQogIGxlZnQ6IDMwJTsNCn0NCiNzdmdDdXJ2ZTIgew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJvcmRlcjogMnB4IGRhc2hlZCBwdXJwbGU7DQogIHdpZHRoOiAzMDBweDsNCiAgaGVpZ2h0OiAxMjBweDsNCiAgbGVmdDogMTElOw0KfQ0K"},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue"],"names":[],"mappings":"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","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/11.8/2021-11-08_CHEN_TDBDemo-Flask-Vue/client/src/components/Test2.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div id=\"container\">\r\n    <!-- <canvas id=\"myCanvas2\" width=\"800\" height=\"300\"></canvas> -->\r\n    <!-- <svg id=\"svgCurve0\" width=\"800\" height=\"300\"></svg> -->\r\n    <div id=\"overlay\">\r\n      There're some text for test. <br />\r\n      For example, this is a <ref>ref</ref>.<br />\r\n      And, this is a <claim>claim</claim>.<br />\r\n    </div>\r\n    <svg id=\"svgCurve1\"></svg>\r\n    <!-- <svg id=\"svgCurve2\"></svg> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport ref from \"@/components/ref.vue\";\r\nimport claim from \"@/components/claim.vue\";\r\n\r\nexport default {\r\n  name: \"Test2\",\r\n  data() {\r\n    // let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    // let data = JSON.parse(pointStr);\r\n\r\n    // return { data };\r\n  },\r\n  components: { ref, claim },\r\n  methods: {\r\n    draw() {\r\n      var data = [{ x1: 0, x2: 60, y1: 0, y2: 20 }];\r\n\r\n      var data2 = [{ x1: 0, x2: 60, y1: 30, y2: 50 }];\r\n\r\n      var svg = d3.select(\"#svgCurve1\");\r\n\r\n      var rect1 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"id\", \"rec1\");\r\n\r\n      var rect2 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data2)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"pink\")\r\n        .attr(\"id\", \"rec2\");\r\n\r\n      /////////////////\r\n\r\n      // var c = document.getElementById(\"myCanvas2\");\r\n      // var ctx = c.getContext(\"2d\");\r\n\r\n      // ctx.beginPath();\r\n      // ctx.moveTo(180, 20);\r\n      // ctx.bezierCurveTo(180, 100, 200, 100, 300, 20);\r\n      // ctx.strokeStyle = \"#FF0000\";\r\n      // ctx.stroke();\r\n\r\n      //////////////\r\n\r\n      //////////////////////////////\r\n    },\r\n    drawCurve() {\r\n          let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n      var points = [];\r\n      const target_copy = data;//Object.assign({}, this.data);\r\n      for (var thing in target_copy) {\r\n        console.log(target_copy[thing][0] + \",\" + target_copy[thing][1]);\r\n        points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n      \r\n\r\n      d3.select(\"#svgCurve2\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"red\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n        console.log(\"?\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scope>\r\n#container {\r\n  position: relative;\r\n  border: 2px solid red;\r\n}\r\n#overlay {\r\n  position: absolute;\r\n  border: 2px solid green;\r\n  fill: green;\r\n}\r\n#myCanvas2 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n}\r\n#svgCurve0 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n  fill: orange;\r\n}\r\n/* #overlayB {\r\n  position: relative;\r\n  top: 10px;\r\n  left: 50px;\r\n  border: 2px solid blue;\r\n} */\r\n#svgCurve1 {\r\n  position: relative;\r\n  border: 2px dashed blue;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 30%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"]}]}