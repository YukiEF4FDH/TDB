{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue","mtime":1632976327209},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSGVsbG9Xb3JsZCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciB0aGlzZGF0YTsKCiAgICBmdW5jdGlvbiByZWFkVGV4dEZpbGUoZmlsZSkgewogICAgICB2YXIgcmF3RmlsZSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpOwogICAgICByYXdGaWxlLm9wZW4oIkdFVCIsIGZpbGUsIGZhbHNlKTsKCiAgICAgIHJhd0ZpbGUub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkgewogICAgICAgIGlmIChyYXdGaWxlLnJlYWR5U3RhdGUgPT09IDQpIHsKICAgICAgICAgIGlmIChyYXdGaWxlLnN0YXR1cyA9PT0gMjAwIHx8IHJhd0ZpbGUuc3RhdHVzID09IDApIHsKICAgICAgICAgICAgdGhpc2RhdGEgPSByYXdGaWxlLnJlc3BvbnNlVGV4dDsgLy8gYWxlcnQoYWxsVGV4dCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9OwoKICAgICAgcmF3RmlsZS5zZW5kKG51bGwpOwogICAgfQoKICAgIHJlYWRUZXh0RmlsZSgiRjFBX0RhdGEuY3N2Iik7CiAgICB2YXIgZGF0YSA9IGQzLmNzdlBhcnNlKHRoaXNkYXRhLCBmdW5jdGlvbiAoZCwgaSwgY29sdW1ucykgewogICAgICByZXR1cm4gZDMuYXV0b1R5cGUoZCksIGQudG90YWwgPSBkMy5zdW0oY29sdW1ucywgZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gZFtjXTsKICAgICAgfSksIGQ7CiAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgIHJldHVybiBiWzFdIC8gYi50b3RhbCAtIGFbMV0gLyBhLnRvdGFsOwogICAgfSk7CiAgICBjb25zb2xlLmxvZygibW91bnRlZCEiKTsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IGRhdGEKICAgIH07CiAgfSAvLyBtb3VudGVkKCkgewogIC8vIAlsZXQgY291bnQgPSAwOwogIC8vIAlsZXQgc2VyaWVzID0gZDMuc3RhY2soKQogIC8vIAkJLmtleXModGhpcy5kYXRhLmNvbHVtbnMuc2xpY2UoMSkpCiAgLy8gCQkub2Zmc2V0KGQzLnN0YWNrT2Zmc2V0RXhwYW5kKQogIC8vIAkJKHRoaXMuZGF0YSkKICAvLyAJCS5tYXAoZCA9PiAoZC5mb3JFYWNoKHYgPT4gdi5rZXkgPSBkLmtleSksIGQpKTsKICAvLyAJbGV0IGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKCkKICAvLyAJCS5kb21haW4oc2VyaWVzLm1hcChkID0+IGQua2V5KSkKICAvLyAJCS5yYW5nZShkMy5zY2hlbWVTcGVjdHJhbFtzZXJpZXMubGVuZ3RoXSkKICAvLyAJCS51bmtub3duKCIjY2NjIik7CiAgLy8gCWxldCBtYXJnaW4gPSAoewogIC8vIAkJdG9wOiAzMCwKICAvLyAJCXJpZ2h0OiAxMCwKICAvLyAJCWJvdHRvbTogMCwKICAvLyAJCWxlZnQ6IDMwCiAgLy8gCX0pOwogIC8vIAlsZXQgd2lkdGggPSAxMzMwOwogIC8vIAlsZXQgaGVpZ2h0ID0gdGhpcy5kYXRhLmxlbmd0aCAqIDI1ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b207CiAgLy8gCS8vIGNvbnNvbGUubG9nKGhlaWdodCk7CiAgLy8gCWxldCBzdmcgPSBkMy5zZWxlY3QoInN2ZyIpCiAgLy8gCQkuYXR0cigidmlld0JveCIsIFswLCAwLCB3aWR0aCwgaGVpZ2h0XSkKICAvLyAJCS5zdHlsZSgib3ZlcmZsb3ciLCAidmlzaWJsZSIpOwogIC8vIAlsZXQgeSA9IGQzLnNjYWxlQmFuZCgpCiAgLy8gCQkuZG9tYWluKHRoaXMuZGF0YS5tYXAoZCA9PiBkLm5hbWUpKQogIC8vIAkJLnJhbmdlKFttYXJnaW4udG9wLCBoZWlnaHQgLSBtYXJnaW4uYm90dG9tXSkKICAvLyAJCS5wYWRkaW5nKDAuMDgpOwogIC8vIAlsZXQgeCA9IGQzLnNjYWxlTGluZWFyKCkKICAvLyAJCS5yYW5nZShbbWFyZ2luLmxlZnQsIHdpZHRoIC0gbWFyZ2luLnJpZ2h0XSk7CiAgLy8gCWxldCBmb3JtYXRWYWx1ZSA9IHggPT4gaXNOYU4oeCkgPyAiTi9BIiA6IHgudG9Mb2NhbGVTdHJpbmcoImVuIik7CiAgLy8gCWxldCBmb3JtYXRQZXJjZW50ID0gZDMuZm9ybWF0KCIuMSUiKTsKICAvLyAJLy8gbGV0IGFycl9qID0gbmV3IEFycmF5KCk7IGxldCBqID0gMDsgbGV0IHBvc3RmaXggPSAiIjsKICAvLyAJLy8gbGV0IGxlbmd0aF95ID0gc2VyaWVzWzBdLmxlbmd0aDsKICAvLyAJc3ZnLmFwcGVuZCgiZyIpCiAgLy8gCQkuc2VsZWN0QWxsKCJnIikKICAvLyAJCS5kYXRhKHNlcmllcykKICAvLyAJCS5lbnRlcigpLmFwcGVuZCgiZyIpCiAgLy8gCQkuYXR0cigiZmlsbCIsIGZ1bmN0aW9uIChkLCBpKSB7CiAgLy8gCQkJLy8gaWYgKGkgKyAxID09IDEpIGFycl9qW2orK10gPSBpICsgMSArICdhJzsgLy8gPz8/CiAgLy8gCQkJLy8gZWxzZSBpZiAoaSArIDEgPT0gMikgYXJyX2pbaisrXSA9IGkgKyAnYic7CiAgLy8gCQkJLy8gZWxzZSBhcnJfaltqKytdID0gaTsKICAvLyAJCQkvLyAvLyBjb25zb2xlLmxvZyhpKTsKICAvLyAJCQlyZXR1cm4gY29sb3IoZC5rZXkpOwogIC8vIAkJfSkKICAvLyAJCS5zZWxlY3RBbGwoInJlY3QiKQogIC8vIAkJLmRhdGEoZnVuY3Rpb24gKGQpIHsgIHJldHVybiBkOyB9KSAvL2ogPSAwOwogIC8vIAkJLmpvaW4oInJlY3QiKQogIC8vIAkJLmF0dHIoImlkIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAvLyAJCQlyZXR1cm4gInJlY3RfIisiMCI7CiAgLy8gCQl9KQogIC8vIAkJLmF0dHIoImNsYXNzIiwgKGQgPT4gYCR7ZC5kYXRhLm5hbWV9JHtkLmtleX1gKSkKICAvLyAJCS5hdHRyKCJ4IiwgZCA9PiB4KGRbMF0pKQogIC8vIAkJLmF0dHIoInkiLCAoZCwgaSkgPT4geShkLmRhdGEubmFtZSkpCiAgLy8gCQkuYXR0cigid2lkdGgiLCBkID0+IHgoZFsxXSkgLSB4KGRbMF0pKQogIC8vIAkJLmF0dHIoImhlaWdodCIsIHkuYmFuZHdpZHRoKCkpOwogIC8vIAlzdmcuc2VsZWN0QWxsKCJyZWN0IikKICAvLyAJCS5vbigibW91c2VvdmVyIiwgZnVuY3Rpb24gKGQsIGkpIHsKICAvLyAJCQlkMy5zZWxlY3QodGhpcykKICAvLyAJCQkJLmF0dHIoImZpbGwiLCAieWVsbG93IikKICAvLyAJCQkJLmFwcGVuZCgidGl0bGUiKQogIC8vIAkJCQkudGV4dChkID0+IGAke2QuZGF0YS5uYW1lfSAke2Qua2V5fQogIC8vIAkJCQkJCQkJJHtmb3JtYXRQZXJjZW50KGRbMV0gLSBkWzBdKX0gKCR7Zm9ybWF0VmFsdWUoZC5kYXRhW2Qua2V5XSl9KWApOwogIC8vIAkJfSkKICAvLyAJCS5vbigibW91c2VvdXQiLCBmdW5jdGlvbiAoZCwgaSkgewogIC8vIAkJCWQzLnNlbGVjdCh0aGlzKQogIC8vIAkJCQkudHJhbnNpdGlvbigpCiAgLy8gCQkJCS5kdXJhdGlvbig1MDApCiAgLy8gCQkJCS5hdHRyKCJmaWxsIiwgZCA9PiBjb2xvcihkLmtleSkpOwogIC8vIAkJfSk7OwogIC8vIAlsZXQgeUF4aXMgPSBnID0+IGcKICAvLyAJCS5hdHRyKCJ0cmFuc2Zvcm0iLCBgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LDApYCkKICAvLyAJCS5jYWxsKGQzLmF4aXNMZWZ0KHkpLnRpY2tTaXplT3V0ZXIoMCkpCiAgLy8gCQkuY2FsbChnID0+IGcuc2VsZWN0QWxsKCIuZG9tYWluIikucmVtb3ZlKCkpOwogIC8vIAlsZXQgeEF4aXMgPSBnID0+IGcKICAvLyAJCS5hdHRyKCJ0cmFuc2Zvcm0iLCBgdHJhbnNsYXRlKDAsJHttYXJnaW4udG9wfSlgKQogIC8vIAkJLmNhbGwoZDMuYXhpc1RvcCh4KS50aWNrcyh3aWR0aCAvIDEwMCwgIiUiKSkKICAvLyAJCS5jYWxsKGcgPT4gZy5zZWxlY3RBbGwoIi5kb21haW4iKS5yZW1vdmUoKSk7CiAgLy8gCXN2Zy5hcHBlbmQoImciKQogIC8vIAkJLmNhbGwoeEF4aXMpOwogIC8vIAlzdmcuYXBwZW5kKCJnIikKICAvLyAJCS5jYWxsKHlBeGlzKTsKICAvLyB9LAoKfTs="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\9.28\\2021-09-30_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\HelloWorld.vue"],"names":[],"mappings":";AAOA,eAAe;AACb,EAAA,IAAI,EAAE,YADO;AAEb,EAAA,IAFa,kBAEN;AACN,QAAI,QAAJ;;AAEA,aAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC3B,UAAI,OAAM,GAAI,IAAI,cAAJ,EAAd;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,IAApB,EAA0B,KAA1B;;AACA,MAAA,OAAO,CAAC,kBAAR,GAA6B,YAAY;AACxC,YAAI,OAAO,CAAC,UAAR,KAAuB,CAA3B,EAA8B;AAC7B,cAAI,OAAO,CAAC,MAAR,KAAmB,GAAnB,IAA0B,OAAO,CAAC,MAAR,IAAkB,CAAhD,EAAmD;AAClD,YAAA,QAAO,GAAI,OAAO,CAAC,YAAnB,CADkD,CAElD;AACD;AACD;AACD,OAPA;;AAQA,MAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACD;;AAEA,IAAA,YAAY,CAAC,cAAD,CAAZ;AAEA,QAAI,IAAG,GAAI,EAAE,CAAC,QAAH,CAAY,QAAZ,EAAsB,UAAU,CAAV,EAAa,CAAb,EAAgB,OAAhB,EAAyB;AACzD,aAAQ,EAAE,CAAC,QAAH,CAAY,CAAZ,GAAgB,CAAC,CAAC,KAAF,GAAU,EAAE,CAAC,GAAH,CAAO,OAAP,EAAgB,UAAA,CAAA;AAAA,eAAK,CAAC,CAAC,CAAD,CAAN;AAAA,OAAhB,CAA1B,EAAsD,CAA9D;AACA,KAFU,EAER,IAFQ,CAEH,UAAC,CAAD,EAAI,CAAJ;AAAA,aAAU,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,KAAT,GAAiB,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,KAApC;AAAA,KAFG,CAAX;AAIG,IAAA,OAAO,CAAC,GAAR,CAAY,UAAZ;AAEH,WAAO;AACN,MAAA,IAAI,EAAJ;AADM,KAAP;AAGA,GA9BY,CA+Bb;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAlIa,CAAf","sourcesContent":["<template>\n  <div class=\"hello\">\n\t<svg> </svg>\t\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  data() {\r\n  \tlet thisdata;\r\n  \r\n  \tfunction readTextFile(file) {\r\n  \t\tvar rawFile = new XMLHttpRequest();\r\n  \t\trawFile.open(\"GET\", file, false);\r\n  \t\trawFile.onreadystatechange = function () {\r\n  \t\t\tif (rawFile.readyState === 4) {\r\n  \t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\r\n  \t\t\t\t\tthisdata = rawFile.responseText;\r\n  \t\t\t\t\t// alert(allText);\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t}\r\n  \t\trawFile.send(null);\r\n  \t}\r\n  \r\n  \treadTextFile(\"F1A_Data.csv\");\r\n  \r\n  \tvar data = d3.csvParse(thisdata, function (d, i, columns) {\r\n  \t\treturn (d3.autoType(d), d.total = d3.sum(columns, c => d[c]), d)\r\n  \t}).sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n  \r\n      console.log(\"mounted!\");\r\n  \r\n  \treturn {\r\n  \t\tdata,\r\n  \t}\r\n  },\r\n  // mounted() {\r\n  \r\n  // \tlet count = 0;\r\n  \r\n  // \tlet series = d3.stack()\r\n  // \t\t.keys(this.data.columns.slice(1))\r\n  // \t\t.offset(d3.stackOffsetExpand)\r\n  // \t\t(this.data)\r\n  // \t\t.map(d => (d.forEach(v => v.key = d.key), d));\r\n  \r\n  // \tlet color = d3.scaleOrdinal()\r\n  // \t\t.domain(series.map(d => d.key))\r\n  // \t\t.range(d3.schemeSpectral[series.length])\r\n  // \t\t.unknown(\"#ccc\");\r\n  \r\n  // \tlet margin = ({\r\n  // \t\ttop: 30,\r\n  // \t\tright: 10,\r\n  // \t\tbottom: 0,\r\n  // \t\tleft: 30\r\n  // \t});\r\n  \r\n  // \tlet width = 1330;\r\n  // \tlet height = this.data.length * 25 + margin.top + margin.bottom;\r\n  // \t// console.log(height);\r\n  \r\n  // \tlet svg = d3.select(\"svg\")\r\n  // \t\t.attr(\"viewBox\", [0, 0, width, height])\r\n  // \t\t.style(\"overflow\", \"visible\");\r\n  \r\n  // \tlet y = d3.scaleBand()\r\n  // \t\t.domain(this.data.map(d => d.name))\r\n  // \t\t.range([margin.top, height - margin.bottom])\r\n  // \t\t.padding(0.08);\r\n  \r\n  // \tlet x = d3.scaleLinear()\r\n  // \t\t.range([margin.left, width - margin.right]);\r\n  \r\n  // \tlet formatValue = x => isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\");\r\n  \r\n  // \tlet formatPercent = d3.format(\".1%\");\r\n  \r\n  // \t// let arr_j = new Array(); let j = 0; let postfix = \"\";\r\n  // \t// let length_y = series[0].length;\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.selectAll(\"g\")\r\n  // \t\t.data(series)\r\n  // \t\t.enter().append(\"g\")\r\n  // \t\t.attr(\"fill\", function (d, i) {\r\n  // \t\t\t// if (i + 1 == 1) arr_j[j++] = i + 1 + 'a'; // ???\r\n  // \t\t\t// else if (i + 1 == 2) arr_j[j++] = i + 'b';\r\n  // \t\t\t// else arr_j[j++] = i;\r\n  // \t\t\t// // console.log(i);\r\n  // \t\t\treturn color(d.key);\r\n  // \t\t})\r\n  // \t\t.selectAll(\"rect\")\r\n  // \t\t.data(function (d) {  return d; }) //j = 0;\r\n  // \t\t.join(\"rect\")\r\n  // \t\t.attr(\"id\", function (d, i) {\r\n  // \t\t\treturn \"rect_\"+\"0\";\r\n  // \t\t})\r\n  // \t\t.attr(\"class\", (d => `${d.data.name}${d.key}`))\r\n  // \t\t.attr(\"x\", d => x(d[0]))\r\n  // \t\t.attr(\"y\", (d, i) => y(d.data.name))\r\n  // \t\t.attr(\"width\", d => x(d[1]) - x(d[0]))\r\n  // \t\t.attr(\"height\", y.bandwidth());\r\n  \r\n  // \tsvg.selectAll(\"rect\")\r\n  // \t\t.on(\"mouseover\", function (d, i) {\r\n  // \t\t\td3.select(this)\r\n  // \t\t\t\t.attr(\"fill\", \"yellow\")\r\n  // \t\t\t\t.append(\"title\")\r\n  // \t\t\t\t.text(d => `${d.data.name} ${d.key}\r\n  // \t\t\t\t\t\t\t\t${formatPercent(d[1] - d[0])} (${formatValue(d.data[d.key])})`);\r\n  // \t\t})\r\n  // \t\t.on(\"mouseout\", function (d, i) {\r\n  // \t\t\td3.select(this)\r\n  // \t\t\t\t.transition()\r\n  // \t\t\t\t.duration(500)\r\n  // \t\t\t\t.attr(\"fill\", d => color(d.key));\r\n  // \t\t});;\r\n  \r\n  // \tlet yAxis = g => g\r\n  // \t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n  // \t\t.call(d3.axisLeft(y).tickSizeOuter(0))\r\n  // \t\t.call(g => g.selectAll(\".domain\").remove());\r\n  \r\n  // \tlet xAxis = g => g\r\n  // \t\t.attr(\"transform\", `translate(0,${margin.top})`)\r\n  // \t\t.call(d3.axisTop(x).ticks(width / 100, \"%\"))\r\n  // \t\t.call(g => g.selectAll(\".domain\").remove());\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.call(xAxis);\r\n  \r\n  // \tsvg.append(\"g\")\r\n  // \t\t.call(yAxis);\r\n      \r\n  // },\n}\n</script>"],"sourceRoot":""}]}