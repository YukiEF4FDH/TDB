{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test.vue","mtime":1636395289926},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwppbXBvcnQgcmVmIGZyb20gIkAvY29tcG9uZW50cy9yZWYudnVlIjsKaW1wb3J0IGNsYWltIGZyb20gIkAvY29tcG9uZW50cy9jbGFpbS52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3QiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgcG9pbnRTdHIgPSAiW1swLDBdLFsyMyw0MDVdLFsxMjAsMzVdLFsxMCwxMF1dIjsKICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShwb2ludFN0cik7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBkYXRhCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgcmVmOiByZWYsCiAgICBjbGFpbTogY2xhaW0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibXlDYW52YXMiKTsKICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgIGN0eC5hcmMoOTUsIDUwLCA0MCwgMCwgMiAqIE1hdGguUEkpOwogICAgICBjdHguc3Ryb2tlKCk7IC8vIGxldCBwID0gbmV3IFBhdGgyRCgnTTEwIDEwIGggODAgdiA4MCBoIC04MCBaJyk7CiAgICAgIC8vIGN0eC5maWxsKHApOwoKICAgICAgdmFyIHBvaW50cyA9IFtdOwogICAgICB2YXIgdGFyZ2V0X2NvcHkgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRhdGEpOwoKICAgICAgZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsKICAgICAgICBjb25zb2xlLmxvZyh0YXJnZXRfY29weVt0aGluZ11bMF0gKyAiLCIgKyB0YXJnZXRfY29weVt0aGluZ11bMV0pOwogICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhwb2ludHMpOwogICAgICB2YXIgY3VydmUgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsKICAgICAgZDMuc2VsZWN0KCIjc3ZnQ3VydmUxIikuYXBwZW5kKCJwYXRoIikuYXR0cigiZCIsIGN1cnZlKHBvaW50cykpLmF0dHIoInN0cm9rZSIsICJyZWQiKS5hdHRyKCJmaWxsIiwgIm5vbmUiKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmRyYXcoKTsKICB9Cn07"},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test.vue"],"names":[],"mappings":"AAaA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AACA,OAAO,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAP,MAAkB,wBAAlB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,MADO;AAEb,EAAA,IAFa,kBAEN;AACL,QAAI,QAAO,GAAI,mCAAf;AACA,QAAI,IAAG,GAAI,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX;AAEA,WAAO;AAAE,MAAA,IAAG,EAAH;AAAF,KAAP;AACD,GAPY;AAQb,EAAA,UAAU,EAAE;AAAE,IAAA,GAAG,EAAH,GAAF;AAAM,IAAA,KAAI,EAAJ;AAAN,GARC;AASb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AACL,UAAI,MAAK,GAAI,QAAQ,CAAC,cAAT,CAAwB,UAAxB,CAAb;AACA,UAAI,GAAE,GAAI,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAV;AACA,MAAA,GAAG,CAAC,SAAJ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,CAApB,EAAuB,IAAI,IAAI,CAAC,EAAhC;AACA,MAAA,GAAG,CAAC,MAAJ,GALK,CAOL;AACA;;AAEA,UAAI,MAAK,GAAI,EAAb;AACA,UAAM,WAAU,GAAI,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAK,IAAvB,CAApB;;AACA,WAAK,IAAI,KAAT,IAAkB,WAAlB,EAA+B;AAC7B,QAAA,OAAO,CAAC,GAAR,CAAY,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,IAAwB,GAAxB,GAA8B,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAA1C;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAI,KAAJ,CAAU,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAAV,EAAiC,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAAjC,CAAZ;AACF;;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AAEA,UAAM,KAAI,GAAI,EAAE,CAAC,IAAH,GAAU,KAAV,CAAgB,EAAE,CAAC,YAAnB,CAAd;AAEA,MAAA,EAAE,CAAC,MAAH,CAAU,YAAV,EACG,MADH,CACU,MADV,EAEG,IAFH,CAEQ,GAFR,EAEa,KAAK,CAAC,MAAD,CAFlB,EAGG,IAHH,CAGQ,QAHR,EAGkB,KAHlB,EAIG,IAJH,CAIQ,MAJR,EAIgB,MAJhB;AAKD;AA1BM,GATI;AAqCb,EAAA,OArCa,qBAqCH;AACR,SAAK,IAAL;AACD;AAvCY,CAAf","sourcesContent":["<template>\r\n  <div id=\"canvas-wrap\">\r\n    <canvas id=\"myCanvas\" width=\"800\" height=\"300\"></canvas>\r\n    <div id=\"overlayA\">There're some text for test. <br>\r\n        For example, this is a <ref>ref</ref>.<br>\r\n        And, this is a <claim>claim</claim>.<br>\r\n        This paragraph belongs to the sub-div node of canvas node.\r\n        </div>\r\n    <div id=\"overlayB\"><svg id=\"svgCurve1\"></svg></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport ref from \"@/components/ref.vue\";\r\nimport claim from \"@/components/claim.vue\";\r\n\r\nexport default {\r\n  name: \"Test\",\r\n  data() {\r\n    let pointStr = \"[[0,0],[23,405],[120,35],[10,10]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n    return { data };\r\n  },\r\n  components: { ref,claim },\r\n  methods: {\r\n    draw() {\r\n      var canvas = document.getElementById(\"myCanvas\");\r\n      var ctx = canvas.getContext(\"2d\");\r\n      ctx.beginPath();\r\n      ctx.arc(95, 50, 40, 0, 2 * Math.PI);\r\n      ctx.stroke();\r\n\r\n      // let p = new Path2D('M10 10 h 80 v 80 h -80 Z');\r\n      // ctx.fill(p);\r\n\r\n      var points = [];\r\n      const target_copy = Object.assign({}, this.data);\r\n      for (var thing in target_copy) {\r\n        console.log(target_copy[thing][0] + \",\" + target_copy[thing][1]);\r\n        points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n\r\n      d3.select(\"#svgCurve1\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"red\")\r\n        .attr(\"fill\", \"none\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#canvas-wrap {\r\n  position: relative;\r\n} /* Make this a positioned parent */\r\n#overlayA {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 30px;\r\n  fill: aquamarine;\r\n}\r\n\r\n#overlayB {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 0px;\r\n}\r\n</style>"],"sourceRoot":""}]}