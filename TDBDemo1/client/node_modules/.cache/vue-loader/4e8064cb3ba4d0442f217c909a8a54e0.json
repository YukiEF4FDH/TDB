{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\src\\components\\Visualization\\SunburstChart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\src\\components\\Visualization\\SunburstChart.vue","mtime":1638745041531},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOw0KDQp2YXIgZjFhRGF0YSA9ICJkZWZhdWx0IjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiU3ViYnVyc3RDaGFydCIsDQogIGRhdGEoKSB7DQogICAgdmFyIGRhdGEgPSBudWxsOw0KICAgIHJldHVybiB7DQogICAgICBkYXRhLA0KICAgIH07DQogIH0sDQogIGNvbXBvbmVudHM6IHt9LA0KICBtZXRob2RzOiB7DQogICAgZHJhdyggZGF0YV8sc3ZnXykgew0KDQogICAgICB0aGlzLmhpZXJhcmNoeShkYXRhXyk7DQoNCiAgICAgICAgICAgIGxldCBhcnIgPSBPYmplY3QuYXNzaWduKHt9LCBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRhdGEpLmNoaWxkcmVuKTsNCiAgICAgIGxldCBkb20gPSBuZXcgQXJyYXkoKTsNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoYXJyKS5sZW5ndGg7IGkrKykgZG9tW2ldID0gYXJyW2ldLm5hbWU7DQogICAgICBjb25zb2xlLmxvZyhkb20pOw0KDQogICAgICBsZXQgY29sb3IgPSBkMw0KICAgICAgICAuc2NhbGVPcmRpbmFsKCkNCiAgICAgICAgLmRvbWFpbihkb20pDQogICAgICAgIC5yYW5nZShbDQogICAgICAgICAgInJnYigyMTUsIDI1LCAyOCkiLA0KICAgICAgICAgICJyZ2IoMjU1LCAyNTUsIDE5MSkiLA0KICAgICAgICAgICJyZ2IoMjUzLCAxNzQsIDk3KSIsDQogICAgICAgICAgInJnYigxNzEsIDIyMSwgMTY0KSIsDQogICAgICAgICAgInJnYig0MywgMTMxLCAxODYpIiwNCiAgICAgICAgICAicmdiKDIxNSwgMjUsIDI4KSIsDQogICAgICAgICAgInJnYigyNTMsIDE3NCwgOTcpIiwNCiAgICAgICAgICAicmdiKDI1NSwgMjU1LCAxOTEpIiwNCiAgICAgICAgICAicmdiKDE3MSwgMjIxLCAxNjQpIiwNCiAgICAgICAgICAicmdiKDQzLCAxMzEsIDE4NikiLA0KICAgICAgICBdKTsNCg0KICAgICAgbGV0IHdpZHRoID0gMjUwOw0KDQogICAgICBsZXQgcmFkaXVzID0gd2lkdGggLyAyOw0KDQogICAgICBsZXQgYXJjID0gZDMNCiAgICAgICAgLmFyYygpDQogICAgICAgIC5zdGFydEFuZ2xlKChkKSA9PiBkLngwKQ0KICAgICAgICAuZW5kQW5nbGUoKGQpID0+IGQueDEpDQogICAgICAgIC5wYWRBbmdsZSgxIC8gcmFkaXVzKQ0KICAgICAgICAucGFkUmFkaXVzKHJhZGl1cykNCiAgICAgICAgLmlubmVyUmFkaXVzKChkKSA9PiBNYXRoLnNxcnQoZC55MCkpDQogICAgICAgIC5vdXRlclJhZGl1cygoZCkgPT4gTWF0aC5zcXJ0KGQueTEpICk7DQoNCiAgICAgIGxldCBtb3VzZWFyYyA9IGQzDQogICAgICAgIC5hcmMoKQ0KICAgICAgICAuc3RhcnRBbmdsZSgoZCkgPT4gZC54MCkNCiAgICAgICAgLmVuZEFuZ2xlKChkKSA9PiBkLngxKQ0KICAgICAgICAuaW5uZXJSYWRpdXMoKGQpID0+IE1hdGguc3FydChkLnkwKSkNCiAgICAgICAgLm91dGVyUmFkaXVzKHJhZGl1cyk7DQoNCiAgICAgIGZ1bmN0aW9uIHBhcnRpdGlvbihkYXRhKSB7DQogICAgICAgIHJldHVybiBkMy5wYXJ0aXRpb24oKS5zaXplKFsyICogTWF0aC5QSSwgcmFkaXVzICogcmFkaXVzXSkoDQogICAgICAgICAgZDMNCiAgICAgICAgICAgIC5oaWVyYXJjaHkoZGF0YSkNCiAgICAgICAgICAgIC5zdW0oKGQpID0+IGQudmFsdWUpDQogICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gYi52YWx1ZSAtIGEudmFsdWUpDQogICAgICAgICk7DQogICAgICB9DQoNCiAgICAgIGNvbnN0IHJvb3QgPSBwYXJ0aXRpb24odGhpcy5kYXRhKTsNCiAgICAgIC8vIGNvbnNvbGUubG9nKHJvb3QpOw0KDQogICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3Qoc3ZnXyk7DQoNCiAgICAgIGNvbnN0IGVsZW1lbnQgPSBzdmcubm9kZSgpOw0KICAgICAgZWxlbWVudC52YWx1ZSA9IHsgc2VxdWVuY2U6IFtdLCBwZXJjZW50YWdlOiAwLjAgfTsNCg0KICAgICAgY29uc3QgbGFiZWwgPSBzdmcNCiAgICAgICAgLmFwcGVuZCgidGV4dCIpDQogICAgICAgIC5hdHRyKCJ0ZXh0LWFuY2hvciIsICJtaWRkbGUiKQ0KICAgICAgICAuYXR0cigiZmlsbCIsICIjODg4IikNCiAgICAgICAgLnN0eWxlKCJ2aXNpYmlsaXR5IiwgImhpZGRlbiIpOw0KDQogICAgICBsYWJlbA0KICAgICAgICAuYXBwZW5kKCJ0c3BhbiIpDQogICAgICAgIC5hdHRyKCJjbGFzcyIsICJwZXJjZW50YWdlIikNCiAgICAgICAgLmF0dHIoIngiLCAwKQ0KICAgICAgICAuYXR0cigieSIsIDApDQogICAgICAgIC5hdHRyKCJkeSIsICItMC4xZW0iKQ0KICAgICAgICAuYXR0cigiZm9udC1zaXplIiwgIjNlbSIpDQogICAgICAgIC50ZXh0KCIiKTsNCg0KICAgICAgbGFiZWwNCiAgICAgICAgLmFwcGVuZCgidHNwYW4iKQ0KICAgICAgICAuYXR0cigieCIsIDApDQogICAgICAgIC5hdHRyKCJ5IiwgMCkNCiAgICAgICAgLmF0dHIoImR5IiwgIjEuNWVtIikNCiAgICAgICAgLnRleHQoIm9mIHZpc2l0cyBiZWdpbiB3aXRoIHRoaXMgc2VxdWVuY2UiKTsNCg0KICAgICAgc3ZnDQogICAgICAgIC5hdHRyKCJ2aWV3Qm94IiwgYCR7LXJhZGl1c30gJHstcmFkaXVzfSAke3dpZHRofSAke3dpZHRofWApDQogICAgICAgIC5zdHlsZSgibWF4LXdpZHRoIiwgYCR7d2lkdGggLyAxLjV9cHhgKQ0KICAgICAgICAuc3R5bGUoImZvbnQiLCAiMTJweCBzYW5zLXNlcmlmIik7DQoNCiAgICAgIGNvbnN0IG1hcCA9IG5ldyBNYXAoKTsNCg0KICAgICAgY29uc3QgcGF0aCA9IHN2Zw0KICAgICAgICAuYXBwZW5kKCJnIikNCiAgICAgICAgLnNlbGVjdEFsbCgicGF0aCIpDQogICAgICAgIC5kYXRhKA0KICAgICAgICAgIHJvb3QuZGVzY2VuZGFudHMoKS5maWx0ZXIoKGQpID0+IHsNCiAgICAgICAgICAgIHJldHVybiBkLmRlcHRoICYmIGQueDEgLSBkLngwID4gMC4wMDE7DQogICAgICAgICAgfSkNCiAgICAgICAgKQ0KICAgICAgICAuam9pbigicGF0aCIpDQogICAgICAgIC5hdHRyKCJmaWxsIiwgKGQpID0+IGNvbG9yKGQuZGF0YS5uYW1lKSkNCiAgICAgICAgLmF0dHIoImQiLCBhcmMpOw0KDQogICAgICBzdmcNCiAgICAgICAgLmFwcGVuZCgiZyIpDQogICAgICAgIC5hdHRyKCJmaWxsIiwgIm5vbmUiKQ0KICAgICAgICAuYXR0cigicG9pbnRlci1ldmVudHMiLCAiYWxsIikNCiAgICAgICAgLm9uKCJtb3VzZWxlYXZlIiwgKCkgPT4gew0KICAgICAgICAgIHBhdGguYXR0cigiZmlsbC1vcGFjaXR5IiwgMSk7DQogICAgICAgICAgbGFiZWwuc3R5bGUoInZpc2liaWxpdHkiLCAiaGlkZGVuIik7DQogICAgICAgICAgLy8gVXBkYXRlIHRoZSB2YWx1ZSBvZiB0aGlzIHZpZXcNCiAgICAgICAgICBlbGVtZW50LnZhbHVlID0geyBzZXF1ZW5jZTogW10sIHBlcmNlbnRhZ2U6IDAuMCB9Ow0KICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoImlucHV0IikpOw0KICAgICAgICB9KQ0KICAgICAgICAuc2VsZWN0QWxsKCJwYXRoIikNCiAgICAgICAgLmRhdGEoDQogICAgICAgICAgcm9vdC5kZXNjZW5kYW50cygpLmZpbHRlcigoZCkgPT4gew0KICAgICAgICAgICAgLy8gRG9uJ3QgZHJhdyB0aGUgcm9vdCBub2RlLCBhbmQgZm9yIGVmZmljaWVuY3ksIGZpbHRlciBvdXQgbm9kZXMgdGhhdCB3b3VsZCBiZSB0b28gc21hbGwgdG8gc2VlDQogICAgICAgICAgICByZXR1cm4gZC5kZXB0aCAmJiBkLngxIC0gZC54MCA+IDAuMDAxOw0KICAgICAgICAgIH0pDQogICAgICAgICkNCiAgICAgICAgLmpvaW4oInBhdGgiKQ0KICAgICAgICAuYXR0cigiZCIsIG1vdXNlYXJjKTsNCiAgICB9LA0KICAgIGhpZXJhcmNoeShhcnIpIHsNCiAgICAgIGZ1bmN0aW9uIGJ1aWxkSGllcmFyY2h5KGNzdikgew0KICAgICAgICAvLyBIZWxwZXIgZnVuY3Rpb24gdGhhdCB0cmFuc2Zvcm1zIHRoZSBnaXZlbiBDU1YgaW50byBhIGhpZXJhcmNoaWNhbCBmb3JtYXQuDQogICAgICAgIGNvbnN0IHJvb3QgPSB7IG5hbWU6ICJyb290IiwgY2hpbGRyZW46IFtdIH07DQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3N2Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgY29uc3Qgc2VxdWVuY2UgPSBjc3ZbaV1bMF07DQogICAgICAgICAgY29uc3Qgc2l6ZSA9ICtjc3ZbaV1bMV07DQogICAgICAgICAgaWYgKGlzTmFOKHNpemUpKSB7DQogICAgICAgICAgICAvLyBlLmcuIGlmIHRoaXMgaXMgYSBoZWFkZXIgcm93DQogICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICB9DQogICAgICAgICAgY29uc3QgcGFydHMgPSBzZXF1ZW5jZS5zcGxpdCgiLSIpOw0KICAgICAgICAgIGxldCBjdXJyZW50Tm9kZSA9IHJvb3Q7DQogICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBwYXJ0cy5sZW5ndGg7IGorKykgew0KICAgICAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBjdXJyZW50Tm9kZVsiY2hpbGRyZW4iXTsNCiAgICAgICAgICAgIGNvbnN0IG5vZGVOYW1lID0gcGFydHNbal07DQogICAgICAgICAgICBsZXQgY2hpbGROb2RlID0gbnVsbDsNCiAgICAgICAgICAgIGlmIChqICsgMSA8IHBhcnRzLmxlbmd0aCkgew0KICAgICAgICAgICAgICAvLyBOb3QgeWV0IGF0IHRoZSBlbmQgb2YgdGhlIHNlcXVlbmNlOyBtb3ZlIGRvd24gdGhlIHRyZWUuDQogICAgICAgICAgICAgIGxldCBmb3VuZENoaWxkID0gZmFsc2U7DQogICAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgY2hpbGRyZW4ubGVuZ3RoOyBrKyspIHsNCiAgICAgICAgICAgICAgICBpZiAoY2hpbGRyZW5ba11bIm5hbWUiXSA9PSBub2RlTmFtZSkgew0KICAgICAgICAgICAgICAgICAgY2hpbGROb2RlID0gY2hpbGRyZW5ba107DQogICAgICAgICAgICAgICAgICBmb3VuZENoaWxkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAvLyBJZiB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgYSBjaGlsZCBub2RlIGZvciB0aGlzIGJyYW5jaCwgY3JlYXRlIGl0Lg0KICAgICAgICAgICAgICBpZiAoIWZvdW5kQ2hpbGQpIHsNCiAgICAgICAgICAgICAgICBjaGlsZE5vZGUgPSB7IG5hbWU6IG5vZGVOYW1lLCBjaGlsZHJlbjogW10gfTsNCiAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkTm9kZSk7DQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgY3VycmVudE5vZGUgPSBjaGlsZE5vZGU7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAvLyBSZWFjaGVkIHRoZSBlbmQgb2YgdGhlIHNlcXVlbmNlOyBjcmVhdGUgYSBsZWFmIG5vZGUuDQogICAgICAgICAgICAgIGNoaWxkTm9kZSA9IHsgbmFtZTogbm9kZU5hbWUsIHZhbHVlOiBzaXplIH07DQogICAgICAgICAgICAgIGNoaWxkcmVuLnB1c2goY2hpbGROb2RlKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHJvb3Q7DQogICAgICB9DQogICAgICBsZXQgdGVzdHJvb3QgPSBidWlsZEhpZXJhcmNoeShhcnIpOw0KICAgICAgY29uc29sZS5sb2coInRlc3Ryb290Iik7DQogICAgICBjb25zb2xlLmxvZyh0ZXN0cm9vdCk7DQoNCiAgICAgIHRoaXMuZGF0YSA9IHRlc3Ryb290Ow0KICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhKTsNCg0KICAgICAgLy8gdGhpcy5kcmF3KCk7DQogICAgfSwNCiAgfSwNCiAgbW91bnRlZCgpIHt9LA0KfTsNCg=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\Demo\\TDBDemo1\\client\\src\\components\\Visualization\\SunburstChart.vue"],"names":[],"mappings":";AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAExB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACb,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;EACH,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACP,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;;MAEhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEf,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEhB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC;;MAEJ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;MAEf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;MAEtB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;MAEvC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAA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","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/Demo/TDBDemo1/client/src/components/Visualization/SunburstChart.vue","sourceRoot":"","sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar f1aData = \"default\";\r\n\r\nexport default {\r\n  name: \"SubburstChart\",\r\n  data() {\r\n    var data = null;\r\n    return {\r\n      data,\r\n    };\r\n  },\r\n  components: {},\r\n  methods: {\r\n    draw( data_,svg_) {\r\n\r\n      this.hierarchy(data_);\r\n\r\n            let arr = Object.assign({}, Object.assign({}, this.data).children);\r\n      let dom = new Array();\r\n      for (let i = 0; i < Object.keys(arr).length; i++) dom[i] = arr[i].name;\r\n      console.log(dom);\r\n\r\n      let color = d3\r\n        .scaleOrdinal()\r\n        .domain(dom)\r\n        .range([\r\n          \"rgb(215, 25, 28)\",\r\n          \"rgb(255, 255, 191)\",\r\n          \"rgb(253, 174, 97)\",\r\n          \"rgb(171, 221, 164)\",\r\n          \"rgb(43, 131, 186)\",\r\n          \"rgb(215, 25, 28)\",\r\n          \"rgb(253, 174, 97)\",\r\n          \"rgb(255, 255, 191)\",\r\n          \"rgb(171, 221, 164)\",\r\n          \"rgb(43, 131, 186)\",\r\n        ]);\r\n\r\n      let width = 250;\r\n\r\n      let radius = width / 2;\r\n\r\n      let arc = d3\r\n        .arc()\r\n        .startAngle((d) => d.x0)\r\n        .endAngle((d) => d.x1)\r\n        .padAngle(1 / radius)\r\n        .padRadius(radius)\r\n        .innerRadius((d) => Math.sqrt(d.y0))\r\n        .outerRadius((d) => Math.sqrt(d.y1) );\r\n\r\n      let mousearc = d3\r\n        .arc()\r\n        .startAngle((d) => d.x0)\r\n        .endAngle((d) => d.x1)\r\n        .innerRadius((d) => Math.sqrt(d.y0))\r\n        .outerRadius(radius);\r\n\r\n      function partition(data) {\r\n        return d3.partition().size([2 * Math.PI, radius * radius])(\r\n          d3\r\n            .hierarchy(data)\r\n            .sum((d) => d.value)\r\n            .sort((a, b) => b.value - a.value)\r\n        );\r\n      }\r\n\r\n      const root = partition(this.data);\r\n      // console.log(root);\r\n\r\n      const svg = d3.select(svg_);\r\n\r\n      const element = svg.node();\r\n      element.value = { sequence: [], percentage: 0.0 };\r\n\r\n      const label = svg\r\n        .append(\"text\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"#888\")\r\n        .style(\"visibility\", \"hidden\");\r\n\r\n      label\r\n        .append(\"tspan\")\r\n        .attr(\"class\", \"percentage\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", 0)\r\n        .attr(\"dy\", \"-0.1em\")\r\n        .attr(\"font-size\", \"3em\")\r\n        .text(\"\");\r\n\r\n      label\r\n        .append(\"tspan\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", 0)\r\n        .attr(\"dy\", \"1.5em\")\r\n        .text(\"of visits begin with this sequence\");\r\n\r\n      svg\r\n        .attr(\"viewBox\", `${-radius} ${-radius} ${width} ${width}`)\r\n        .style(\"max-width\", `${width / 1.5}px`)\r\n        .style(\"font\", \"12px sans-serif\");\r\n\r\n      const map = new Map();\r\n\r\n      const path = svg\r\n        .append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(\r\n          root.descendants().filter((d) => {\r\n            return d.depth && d.x1 - d.x0 > 0.001;\r\n          })\r\n        )\r\n        .join(\"path\")\r\n        .attr(\"fill\", (d) => color(d.data.name))\r\n        .attr(\"d\", arc);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"mouseleave\", () => {\r\n          path.attr(\"fill-opacity\", 1);\r\n          label.style(\"visibility\", \"hidden\");\r\n          // Update the value of this view\r\n          element.value = { sequence: [], percentage: 0.0 };\r\n          element.dispatchEvent(new CustomEvent(\"input\"));\r\n        })\r\n        .selectAll(\"path\")\r\n        .data(\r\n          root.descendants().filter((d) => {\r\n            // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see\r\n            return d.depth && d.x1 - d.x0 > 0.001;\r\n          })\r\n        )\r\n        .join(\"path\")\r\n        .attr(\"d\", mousearc);\r\n    },\r\n    hierarchy(arr) {\r\n      function buildHierarchy(csv) {\r\n        // Helper function that transforms the given CSV into a hierarchical format.\r\n        const root = { name: \"root\", children: [] };\r\n        for (let i = 0; i < csv.length; i++) {\r\n          const sequence = csv[i][0];\r\n          const size = +csv[i][1];\r\n          if (isNaN(size)) {\r\n            // e.g. if this is a header row\r\n            continue;\r\n          }\r\n          const parts = sequence.split(\"-\");\r\n          let currentNode = root;\r\n          for (let j = 0; j < parts.length; j++) {\r\n            const children = currentNode[\"children\"];\r\n            const nodeName = parts[j];\r\n            let childNode = null;\r\n            if (j + 1 < parts.length) {\r\n              // Not yet at the end of the sequence; move down the tree.\r\n              let foundChild = false;\r\n              for (let k = 0; k < children.length; k++) {\r\n                if (children[k][\"name\"] == nodeName) {\r\n                  childNode = children[k];\r\n                  foundChild = true;\r\n                  break;\r\n                }\r\n              }\r\n              // If we don't already have a child node for this branch, create it.\r\n              if (!foundChild) {\r\n                childNode = { name: nodeName, children: [] };\r\n                children.push(childNode);\r\n              }\r\n              currentNode = childNode;\r\n            } else {\r\n              // Reached the end of the sequence; create a leaf node.\r\n              childNode = { name: nodeName, value: size };\r\n              children.push(childNode);\r\n            }\r\n          }\r\n        }\r\n        return root;\r\n      }\r\n      let testroot = buildHierarchy(arr);\r\n      console.log(\"testroot\");\r\n      console.log(testroot);\r\n\r\n      this.data = testroot;\r\n      console.log(this.data);\r\n\r\n      // this.draw();\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nchart-info {\r\n  font-size: 14px;\r\n  color: #0000ff;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 30%;\r\n}\r\n.rightC {\r\n  margin-left: 42%;\r\n  margin-top: -17%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"]}]}