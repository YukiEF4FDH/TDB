{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue","mtime":1636559936219},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOw0KaW1wb3J0IHJlZiBmcm9tICJAL2NvbXBvbmVudHMvcmVmLnZ1ZSI7DQppbXBvcnQgY2xhaW0gZnJvbSAiQC9jb21wb25lbnRzL2NsYWltLnZ1ZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlRlc3QyIiwNCiAgZGF0YSgpIHsNCiAgICAvLyBsZXQgcG9pbnRTdHIgPSAiW1sxMDAsNDBdLFs1MCwxMDZdLFsyMDAsODBdLFsyMDAsMjBdXSI7DQogICAgLy8gbGV0IGRhdGEgPSBKU09OLnBhcnNlKHBvaW50U3RyKTsNCg0KICAgIC8vIHJldHVybiB7IGRhdGEgfTsNCiAgfSwNCiAgY29tcG9uZW50czogeyByZWYsIGNsYWltIH0sDQogIG1ldGhvZHM6IHsNCiAgICBkcmF3KCkgew0KICAgICAgdmFyIGRhdGEgPSBbeyB4MTogMCwgeDI6IDYwLCB5MTogMCwgeTI6IDIwIH1dOw0KDQogICAgICB2YXIgZGF0YTIgPSBbeyB4MTogMCwgeDI6IDYwLCB5MTogMzAsIHkyOiA1MCB9XTsNCg0KICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiI3N2Z0N1cnZlMSIpOw0KDQogICAgICB2YXIgcmVjdDEgPSBzdmcNCiAgICAgICAgLnNlbGVjdEFsbCgiZm9vIikNCiAgICAgICAgLmRhdGEoZGF0YSkNCiAgICAgICAgLmVudGVyKCkNCiAgICAgICAgLmFwcGVuZCgicmVjdCIpDQogICAgICAgIC5hdHRyKCJ4IiwgKGQpID0+IGQueDEpDQogICAgICAgIC5hdHRyKCJ5IiwgKGQpID0+IGQueTEpDQogICAgICAgIC5hdHRyKCJ3aWR0aCIsIChkKSA9PiBkLngyIC0gZC54MSkNCiAgICAgICAgLmF0dHIoImhlaWdodCIsIChkKSA9PiBkLnkyIC0gZC55MSkNCiAgICAgICAgLmF0dHIoImZpbGwiLCAicmVkIikNCiAgICAgICAgLmF0dHIoImlkIiwgInJlYzEiKTsNCg0KICAgICAgdmFyIHJlY3QyID0gc3ZnDQogICAgICAgIC5zZWxlY3RBbGwoImZvbyIpDQogICAgICAgIC5kYXRhKGRhdGEyKQ0KICAgICAgICAuZW50ZXIoKQ0KICAgICAgICAuYXBwZW5kKCJyZWN0IikNCiAgICAgICAgLmF0dHIoIngiLCAoZCkgPT4gZC54MSkNCiAgICAgICAgLmF0dHIoInkiLCAoZCkgPT4gZC55MSkNCiAgICAgICAgLmF0dHIoIndpZHRoIiwgKGQpID0+IGQueDIgLSBkLngxKQ0KICAgICAgICAuYXR0cigiaGVpZ2h0IiwgKGQpID0+IGQueTIgLSBkLnkxKQ0KICAgICAgICAuYXR0cigiZmlsbCIsICJwaW5rIikNCiAgICAgICAgLmF0dHIoImlkIiwgInJlYzIiKTsNCg0KICAgICAgLy8vLy8vLy8vLy8vLy8vLy8NCg0KICAgICAgLy8gdmFyIGMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibXlDYW52YXMyIik7DQogICAgICAvLyB2YXIgY3R4ID0gYy5nZXRDb250ZXh0KCIyZCIpOw0KDQogICAgICAvLyBjdHguYmVnaW5QYXRoKCk7DQogICAgICAvLyBjdHgubW92ZVRvKDE4MCwgMjApOw0KICAgICAgLy8gY3R4LmJlemllckN1cnZlVG8oMTgwLCAxMDAsIDIwMCwgMTAwLCAzMDAsIDIwKTsNCiAgICAgIC8vIGN0eC5zdHJva2VTdHlsZSA9ICIjRkYwMDAwIjsNCiAgICAgIC8vIGN0eC5zdHJva2UoKTsNCg0KICAgICAgLy8vLy8vLy8vLy8vLy8NCg0KICAgICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQogICAgfSwNCiAgICBkcmF3Q3VydmUoKSB7DQogICAgICAgICAgbGV0IHBvaW50U3RyID0gIltbMTAwLDQwXSxbNTAsMTA2XSxbMjAwLDgwXSxbMjAwLDIwXV0iOw0KICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShwb2ludFN0cik7DQoNCiAgICAgIHZhciBwb2ludHMgPSBbXTsNCiAgICAgIGNvbnN0IHRhcmdldF9jb3B5ID0gZGF0YTsvL09iamVjdC5hc3NpZ24oe30sIHRoaXMuZGF0YSk7DQogICAgICBmb3IgKHZhciB0aGluZyBpbiB0YXJnZXRfY29weSkgew0KICAgICAgICBjb25zb2xlLmxvZyh0YXJnZXRfY29weVt0aGluZ11bMF0gKyAiLCIgKyB0YXJnZXRfY29weVt0aGluZ11bMV0pOw0KICAgICAgICBwb2ludHMucHVzaChuZXcgQXJyYXkodGFyZ2V0X2NvcHlbdGhpbmddWzBdLCB0YXJnZXRfY29weVt0aGluZ11bMV0pKTsNCiAgICAgIH0NCiAgICAgIGNvbnNvbGUubG9nKHBvaW50cyk7DQoNCiAgICAgIGNvbnN0IGN1cnZlID0gZDMubGluZSgpLmN1cnZlKGQzLmN1cnZlTmF0dXJhbCk7DQogICAgICANCg0KICAgICAgZDMuc2VsZWN0KCIjc3ZnQ3VydmUyIikNCiAgICAgICAgLmFwcGVuZCgicGF0aCIpDQogICAgICAgIC5hdHRyKCJkIiwgY3VydmUocG9pbnRzKSkNCiAgICAgICAgLmF0dHIoInN0cm9rZSIsICJyZWQiKQ0KICAgICAgICAuYXR0cigiZmlsbCIsICJub25lIik7DQoNCiAgICAgICAgY29uc29sZS5sb2coIj8iKTsNCiAgICB9LA0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuZHJhdygpOw0KICB9LA0KfTsNCg=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-10_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Test2.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtE;MACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEnB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;MAG9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAErB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;EACH,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;AACH,CAAC","file":"D:/MyResearch/WakitaLab/ProjectTDB/Code/11.10/2021-11-10_CHEN_TDBDemo-Flask-Vue/client/src/components/Test2.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div id=\"container\">\r\n    <!-- <canvas id=\"myCanvas2\" width=\"800\" height=\"300\"></canvas> -->\r\n    <!-- <svg id=\"svgCurve0\" width=\"800\" height=\"300\"></svg> -->\r\n    <div id=\"overlay\">\r\n      There're some text for test. <br />\r\n      For example, this is a <ref>ref</ref>.<br />\r\n      And, this is a <claim>claim</claim>.<br />\r\n    </div>\r\n    <svg id=\"svgCurve1\"></svg>\r\n    <!-- <svg id=\"svgCurve2\"></svg> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\nimport ref from \"@/components/ref.vue\";\r\nimport claim from \"@/components/claim.vue\";\r\n\r\nexport default {\r\n  name: \"Test2\",\r\n  data() {\r\n    // let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    // let data = JSON.parse(pointStr);\r\n\r\n    // return { data };\r\n  },\r\n  components: { ref, claim },\r\n  methods: {\r\n    draw() {\r\n      var data = [{ x1: 0, x2: 60, y1: 0, y2: 20 }];\r\n\r\n      var data2 = [{ x1: 0, x2: 60, y1: 30, y2: 50 }];\r\n\r\n      var svg = d3.select(\"#svgCurve1\");\r\n\r\n      var rect1 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"id\", \"rec1\");\r\n\r\n      var rect2 = svg\r\n        .selectAll(\"foo\")\r\n        .data(data2)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"x\", (d) => d.x1)\r\n        .attr(\"y\", (d) => d.y1)\r\n        .attr(\"width\", (d) => d.x2 - d.x1)\r\n        .attr(\"height\", (d) => d.y2 - d.y1)\r\n        .attr(\"fill\", \"pink\")\r\n        .attr(\"id\", \"rec2\");\r\n\r\n      /////////////////\r\n\r\n      // var c = document.getElementById(\"myCanvas2\");\r\n      // var ctx = c.getContext(\"2d\");\r\n\r\n      // ctx.beginPath();\r\n      // ctx.moveTo(180, 20);\r\n      // ctx.bezierCurveTo(180, 100, 200, 100, 300, 20);\r\n      // ctx.strokeStyle = \"#FF0000\";\r\n      // ctx.stroke();\r\n\r\n      //////////////\r\n\r\n      //////////////////////////////\r\n    },\r\n    drawCurve() {\r\n          let pointStr = \"[[100,40],[50,106],[200,80],[200,20]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n      var points = [];\r\n      const target_copy = data;//Object.assign({}, this.data);\r\n      for (var thing in target_copy) {\r\n        console.log(target_copy[thing][0] + \",\" + target_copy[thing][1]);\r\n        points.push(new Array(target_copy[thing][0], target_copy[thing][1]));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n      \r\n\r\n      d3.select(\"#svgCurve2\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"red\")\r\n        .attr(\"fill\", \"none\");\r\n\r\n        console.log(\"?\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#container {\r\n  position: relative;\r\n  border: 2px solid red;\r\n}\r\n#overlay {\r\n  position: absolute;\r\n  border: 2px solid green;\r\n  fill: green;\r\n}\r\n#myCanvas2 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n}\r\n#svgCurve0 {\r\n  position: absolute;\r\n  border: 2px solid orange;\r\n  fill: orange;\r\n}\r\n/* #overlayB {\r\n  position: relative;\r\n  top: 10px;\r\n  left: 50px;\r\n  border: 2px solid blue;\r\n} */\r\n#svgCurve1 {\r\n  position: relative;\r\n  border: 2px dashed blue;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 30%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"]}]}