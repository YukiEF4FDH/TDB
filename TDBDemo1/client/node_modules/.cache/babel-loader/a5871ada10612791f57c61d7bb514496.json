{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\src\\components\\Visualization\\SunburstChart.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\src\\components\\Visualization\\SunburstChart.vue","mtime":1638745041531},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwp2YXIgZjFhRGF0YSA9ICJkZWZhdWx0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTdWJidXJzdENoYXJ0IiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIGRhdGEgPSBudWxsOwogICAgcmV0dXJuIHsKICAgICAgZGF0YTogZGF0YQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHt9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoZGF0YV8sIHN2Z18pIHsKICAgICAgdGhpcy5oaWVyYXJjaHkoZGF0YV8pOwogICAgICB2YXIgYXJyID0gT2JqZWN0LmFzc2lnbih7fSwgT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kYXRhKS5jaGlsZHJlbik7CiAgICAgIHZhciBkb20gPSBuZXcgQXJyYXkoKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgT2JqZWN0LmtleXMoYXJyKS5sZW5ndGg7IGkrKykgewogICAgICAgIGRvbVtpXSA9IGFycltpXS5uYW1lOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhkb20pOwogICAgICB2YXIgY29sb3IgPSBkMy5zY2FsZU9yZGluYWwoKS5kb21haW4oZG9tKS5yYW5nZShbInJnYigyMTUsIDI1LCAyOCkiLCAicmdiKDI1NSwgMjU1LCAxOTEpIiwgInJnYigyNTMsIDE3NCwgOTcpIiwgInJnYigxNzEsIDIyMSwgMTY0KSIsICJyZ2IoNDMsIDEzMSwgMTg2KSIsICJyZ2IoMjE1LCAyNSwgMjgpIiwgInJnYigyNTMsIDE3NCwgOTcpIiwgInJnYigyNTUsIDI1NSwgMTkxKSIsICJyZ2IoMTcxLCAyMjEsIDE2NCkiLCAicmdiKDQzLCAxMzEsIDE4NikiXSk7CiAgICAgIHZhciB3aWR0aCA9IDI1MDsKICAgICAgdmFyIHJhZGl1cyA9IHdpZHRoIC8gMjsKICAgICAgdmFyIGFyYyA9IGQzLmFyYygpLnN0YXJ0QW5nbGUoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54MDsKICAgICAgfSkuZW5kQW5nbGUoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54MTsKICAgICAgfSkucGFkQW5nbGUoMSAvIHJhZGl1cykucGFkUmFkaXVzKHJhZGl1cykuaW5uZXJSYWRpdXMoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gTWF0aC5zcXJ0KGQueTApOwogICAgICB9KS5vdXRlclJhZGl1cyhmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBNYXRoLnNxcnQoZC55MSk7CiAgICAgIH0pOwogICAgICB2YXIgbW91c2VhcmMgPSBkMy5hcmMoKS5zdGFydEFuZ2xlKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueDA7CiAgICAgIH0pLmVuZEFuZ2xlKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueDE7CiAgICAgIH0pLmlubmVyUmFkaXVzKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIE1hdGguc3FydChkLnkwKTsKICAgICAgfSkub3V0ZXJSYWRpdXMocmFkaXVzKTsKCiAgICAgIGZ1bmN0aW9uIHBhcnRpdGlvbihkYXRhKSB7CiAgICAgICAgcmV0dXJuIGQzLnBhcnRpdGlvbigpLnNpemUoWzIgKiBNYXRoLlBJLCByYWRpdXMgKiByYWRpdXNdKShkMy5oaWVyYXJjaHkoZGF0YSkuc3VtKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC52YWx1ZTsKICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICByZXR1cm4gYi52YWx1ZSAtIGEudmFsdWU7CiAgICAgICAgfSkpOwogICAgICB9CgogICAgICB2YXIgcm9vdCA9IHBhcnRpdGlvbih0aGlzLmRhdGEpOyAvLyBjb25zb2xlLmxvZyhyb290KTsKCiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3Qoc3ZnXyk7CiAgICAgIHZhciBlbGVtZW50ID0gc3ZnLm5vZGUoKTsKICAgICAgZWxlbWVudC52YWx1ZSA9IHsKICAgICAgICBzZXF1ZW5jZTogW10sCiAgICAgICAgcGVyY2VudGFnZTogMC4wCiAgICAgIH07CiAgICAgIHZhciBsYWJlbCA9IHN2Zy5hcHBlbmQoInRleHQiKS5hdHRyKCJ0ZXh0LWFuY2hvciIsICJtaWRkbGUiKS5hdHRyKCJmaWxsIiwgIiM4ODgiKS5zdHlsZSgidmlzaWJpbGl0eSIsICJoaWRkZW4iKTsKICAgICAgbGFiZWwuYXBwZW5kKCJ0c3BhbiIpLmF0dHIoImNsYXNzIiwgInBlcmNlbnRhZ2UiKS5hdHRyKCJ4IiwgMCkuYXR0cigieSIsIDApLmF0dHIoImR5IiwgIi0wLjFlbSIpLmF0dHIoImZvbnQtc2l6ZSIsICIzZW0iKS50ZXh0KCIiKTsKICAgICAgbGFiZWwuYXBwZW5kKCJ0c3BhbiIpLmF0dHIoIngiLCAwKS5hdHRyKCJ5IiwgMCkuYXR0cigiZHkiLCAiMS41ZW0iKS50ZXh0KCJvZiB2aXNpdHMgYmVnaW4gd2l0aCB0aGlzIHNlcXVlbmNlIik7CiAgICAgIHN2Zy5hdHRyKCJ2aWV3Qm94IiwgIiIuY29uY2F0KC1yYWRpdXMsICIgIikuY29uY2F0KC1yYWRpdXMsICIgIikuY29uY2F0KHdpZHRoLCAiICIpLmNvbmNhdCh3aWR0aCkpLnN0eWxlKCJtYXgtd2lkdGgiLCAiIi5jb25jYXQod2lkdGggLyAxLjUsICJweCIpKS5zdHlsZSgiZm9udCIsICIxMnB4IHNhbnMtc2VyaWYiKTsKICAgICAgdmFyIG1hcCA9IG5ldyBNYXAoKTsKICAgICAgdmFyIHBhdGggPSBzdmcuYXBwZW5kKCJnIikuc2VsZWN0QWxsKCJwYXRoIikuZGF0YShyb290LmRlc2NlbmRhbnRzKCkuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGVwdGggJiYgZC54MSAtIGQueDAgPiAwLjAwMTsKICAgICAgfSkpLmpvaW4oInBhdGgiKS5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gY29sb3IoZC5kYXRhLm5hbWUpOwogICAgICB9KS5hdHRyKCJkIiwgYXJjKTsKICAgICAgc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImZpbGwiLCAibm9uZSIpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwgImFsbCIpLm9uKCJtb3VzZWxlYXZlIiwgZnVuY3Rpb24gKCkgewogICAgICAgIHBhdGguYXR0cigiZmlsbC1vcGFjaXR5IiwgMSk7CiAgICAgICAgbGFiZWwuc3R5bGUoInZpc2liaWxpdHkiLCAiaGlkZGVuIik7IC8vIFVwZGF0ZSB0aGUgdmFsdWUgb2YgdGhpcyB2aWV3CgogICAgICAgIGVsZW1lbnQudmFsdWUgPSB7CiAgICAgICAgICBzZXF1ZW5jZTogW10sCiAgICAgICAgICBwZXJjZW50YWdlOiAwLjAKICAgICAgICB9OwogICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoImlucHV0IikpOwogICAgICB9KS5zZWxlY3RBbGwoInBhdGgiKS5kYXRhKHJvb3QuZGVzY2VuZGFudHMoKS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICAvLyBEb24ndCBkcmF3IHRoZSByb290IG5vZGUsIGFuZCBmb3IgZWZmaWNpZW5jeSwgZmlsdGVyIG91dCBub2RlcyB0aGF0IHdvdWxkIGJlIHRvbyBzbWFsbCB0byBzZWUKICAgICAgICByZXR1cm4gZC5kZXB0aCAmJiBkLngxIC0gZC54MCA+IDAuMDAxOwogICAgICB9KSkuam9pbigicGF0aCIpLmF0dHIoImQiLCBtb3VzZWFyYyk7CiAgICB9LAogICAgaGllcmFyY2h5OiBmdW5jdGlvbiBoaWVyYXJjaHkoYXJyKSB7CiAgICAgIGZ1bmN0aW9uIGJ1aWxkSGllcmFyY2h5KGNzdikgewogICAgICAgIC8vIEhlbHBlciBmdW5jdGlvbiB0aGF0IHRyYW5zZm9ybXMgdGhlIGdpdmVuIENTViBpbnRvIGEgaGllcmFyY2hpY2FsIGZvcm1hdC4KICAgICAgICB2YXIgcm9vdCA9IHsKICAgICAgICAgIG5hbWU6ICJyb290IiwKICAgICAgICAgIGNoaWxkcmVuOiBbXQogICAgICAgIH07CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY3N2Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgc2VxdWVuY2UgPSBjc3ZbaV1bMF07CiAgICAgICAgICB2YXIgc2l6ZSA9ICtjc3ZbaV1bMV07CgogICAgICAgICAgaWYgKGlzTmFOKHNpemUpKSB7CiAgICAgICAgICAgIC8vIGUuZy4gaWYgdGhpcyBpcyBhIGhlYWRlciByb3cKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIHBhcnRzID0gc2VxdWVuY2Uuc3BsaXQoIi0iKTsKICAgICAgICAgIHZhciBjdXJyZW50Tm9kZSA9IHJvb3Q7CgogICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwYXJ0cy5sZW5ndGg7IGorKykgewogICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBjdXJyZW50Tm9kZVsiY2hpbGRyZW4iXTsKICAgICAgICAgICAgdmFyIG5vZGVOYW1lID0gcGFydHNbal07CiAgICAgICAgICAgIHZhciBjaGlsZE5vZGUgPSBudWxsOwoKICAgICAgICAgICAgaWYgKGogKyAxIDwgcGFydHMubGVuZ3RoKSB7CiAgICAgICAgICAgICAgLy8gTm90IHlldCBhdCB0aGUgZW5kIG9mIHRoZSBzZXF1ZW5jZTsgbW92ZSBkb3duIHRoZSB0cmVlLgogICAgICAgICAgICAgIHZhciBmb3VuZENoaWxkID0gZmFsc2U7CgogICAgICAgICAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgY2hpbGRyZW4ubGVuZ3RoOyBrKyspIHsKICAgICAgICAgICAgICAgIGlmIChjaGlsZHJlbltrXVsibmFtZSJdID09IG5vZGVOYW1lKSB7CiAgICAgICAgICAgICAgICAgIGNoaWxkTm9kZSA9IGNoaWxkcmVuW2tdOwogICAgICAgICAgICAgICAgICBmb3VuZENoaWxkID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSAvLyBJZiB3ZSBkb24ndCBhbHJlYWR5IGhhdmUgYSBjaGlsZCBub2RlIGZvciB0aGlzIGJyYW5jaCwgY3JlYXRlIGl0LgoKCiAgICAgICAgICAgICAgaWYgKCFmb3VuZENoaWxkKSB7CiAgICAgICAgICAgICAgICBjaGlsZE5vZGUgPSB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5vZGVOYW1lLAogICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW10KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkTm9kZSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjdXJyZW50Tm9kZSA9IGNoaWxkTm9kZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBSZWFjaGVkIHRoZSBlbmQgb2YgdGhlIHNlcXVlbmNlOyBjcmVhdGUgYSBsZWFmIG5vZGUuCiAgICAgICAgICAgICAgY2hpbGROb2RlID0gewogICAgICAgICAgICAgICAgbmFtZTogbm9kZU5hbWUsCiAgICAgICAgICAgICAgICB2YWx1ZTogc2l6ZQogICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgY2hpbGRyZW4ucHVzaChjaGlsZE5vZGUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcm9vdDsKICAgICAgfQoKICAgICAgdmFyIHRlc3Ryb290ID0gYnVpbGRIaWVyYXJjaHkoYXJyKTsKICAgICAgY29uc29sZS5sb2coInRlc3Ryb290Iik7CiAgICAgIGNvbnNvbGUubG9nKHRlc3Ryb290KTsKICAgICAgdGhpcy5kYXRhID0gdGVzdHJvb3Q7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YSk7IC8vIHRoaXMuZHJhdygpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9Cn07"},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.10\\2021-11-22_CHEN_TDBDemo-Flask-Vue1\\client\\src\\components\\Visualization\\SunburstChart.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\n\r\nvar f1aData = \"default\";\r\n\r\nexport default {\r\n  name: \"SubburstChart\",\r\n  data() {\r\n    var data = null;\r\n    return {\r\n      data,\r\n    };\r\n  },\r\n  components: {},\r\n  methods: {\r\n    draw( data_,svg_) {\r\n\r\n      this.hierarchy(data_);\r\n\r\n            let arr = Object.assign({}, Object.assign({}, this.data).children);\r\n      let dom = new Array();\r\n      for (let i = 0; i < Object.keys(arr).length; i++) dom[i] = arr[i].name;\r\n      console.log(dom);\r\n\r\n      let color = d3\r\n        .scaleOrdinal()\r\n        .domain(dom)\r\n        .range([\r\n          \"rgb(215, 25, 28)\",\r\n          \"rgb(255, 255, 191)\",\r\n          \"rgb(253, 174, 97)\",\r\n          \"rgb(171, 221, 164)\",\r\n          \"rgb(43, 131, 186)\",\r\n          \"rgb(215, 25, 28)\",\r\n          \"rgb(253, 174, 97)\",\r\n          \"rgb(255, 255, 191)\",\r\n          \"rgb(171, 221, 164)\",\r\n          \"rgb(43, 131, 186)\",\r\n        ]);\r\n\r\n      let width = 250;\r\n\r\n      let radius = width / 2;\r\n\r\n      let arc = d3\r\n        .arc()\r\n        .startAngle((d) => d.x0)\r\n        .endAngle((d) => d.x1)\r\n        .padAngle(1 / radius)\r\n        .padRadius(radius)\r\n        .innerRadius((d) => Math.sqrt(d.y0))\r\n        .outerRadius((d) => Math.sqrt(d.y1) );\r\n\r\n      let mousearc = d3\r\n        .arc()\r\n        .startAngle((d) => d.x0)\r\n        .endAngle((d) => d.x1)\r\n        .innerRadius((d) => Math.sqrt(d.y0))\r\n        .outerRadius(radius);\r\n\r\n      function partition(data) {\r\n        return d3.partition().size([2 * Math.PI, radius * radius])(\r\n          d3\r\n            .hierarchy(data)\r\n            .sum((d) => d.value)\r\n            .sort((a, b) => b.value - a.value)\r\n        );\r\n      }\r\n\r\n      const root = partition(this.data);\r\n      // console.log(root);\r\n\r\n      const svg = d3.select(svg_);\r\n\r\n      const element = svg.node();\r\n      element.value = { sequence: [], percentage: 0.0 };\r\n\r\n      const label = svg\r\n        .append(\"text\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"fill\", \"#888\")\r\n        .style(\"visibility\", \"hidden\");\r\n\r\n      label\r\n        .append(\"tspan\")\r\n        .attr(\"class\", \"percentage\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", 0)\r\n        .attr(\"dy\", \"-0.1em\")\r\n        .attr(\"font-size\", \"3em\")\r\n        .text(\"\");\r\n\r\n      label\r\n        .append(\"tspan\")\r\n        .attr(\"x\", 0)\r\n        .attr(\"y\", 0)\r\n        .attr(\"dy\", \"1.5em\")\r\n        .text(\"of visits begin with this sequence\");\r\n\r\n      svg\r\n        .attr(\"viewBox\", `${-radius} ${-radius} ${width} ${width}`)\r\n        .style(\"max-width\", `${width / 1.5}px`)\r\n        .style(\"font\", \"12px sans-serif\");\r\n\r\n      const map = new Map();\r\n\r\n      const path = svg\r\n        .append(\"g\")\r\n        .selectAll(\"path\")\r\n        .data(\r\n          root.descendants().filter((d) => {\r\n            return d.depth && d.x1 - d.x0 > 0.001;\r\n          })\r\n        )\r\n        .join(\"path\")\r\n        .attr(\"fill\", (d) => color(d.data.name))\r\n        .attr(\"d\", arc);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"pointer-events\", \"all\")\r\n        .on(\"mouseleave\", () => {\r\n          path.attr(\"fill-opacity\", 1);\r\n          label.style(\"visibility\", \"hidden\");\r\n          // Update the value of this view\r\n          element.value = { sequence: [], percentage: 0.0 };\r\n          element.dispatchEvent(new CustomEvent(\"input\"));\r\n        })\r\n        .selectAll(\"path\")\r\n        .data(\r\n          root.descendants().filter((d) => {\r\n            // Don't draw the root node, and for efficiency, filter out nodes that would be too small to see\r\n            return d.depth && d.x1 - d.x0 > 0.001;\r\n          })\r\n        )\r\n        .join(\"path\")\r\n        .attr(\"d\", mousearc);\r\n    },\r\n    hierarchy(arr) {\r\n      function buildHierarchy(csv) {\r\n        // Helper function that transforms the given CSV into a hierarchical format.\r\n        const root = { name: \"root\", children: [] };\r\n        for (let i = 0; i < csv.length; i++) {\r\n          const sequence = csv[i][0];\r\n          const size = +csv[i][1];\r\n          if (isNaN(size)) {\r\n            // e.g. if this is a header row\r\n            continue;\r\n          }\r\n          const parts = sequence.split(\"-\");\r\n          let currentNode = root;\r\n          for (let j = 0; j < parts.length; j++) {\r\n            const children = currentNode[\"children\"];\r\n            const nodeName = parts[j];\r\n            let childNode = null;\r\n            if (j + 1 < parts.length) {\r\n              // Not yet at the end of the sequence; move down the tree.\r\n              let foundChild = false;\r\n              for (let k = 0; k < children.length; k++) {\r\n                if (children[k][\"name\"] == nodeName) {\r\n                  childNode = children[k];\r\n                  foundChild = true;\r\n                  break;\r\n                }\r\n              }\r\n              // If we don't already have a child node for this branch, create it.\r\n              if (!foundChild) {\r\n                childNode = { name: nodeName, children: [] };\r\n                children.push(childNode);\r\n              }\r\n              currentNode = childNode;\r\n            } else {\r\n              // Reached the end of the sequence; create a leaf node.\r\n              childNode = { name: nodeName, value: size };\r\n              children.push(childNode);\r\n            }\r\n          }\r\n        }\r\n        return root;\r\n      }\r\n      let testroot = buildHierarchy(arr);\r\n      console.log(\"testroot\");\r\n      console.log(testroot);\r\n\r\n      this.data = testroot;\r\n      console.log(this.data);\r\n\r\n      // this.draw();\r\n    },\r\n  },\r\n  mounted() {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nchart-info {\r\n  font-size: 14px;\r\n  color: #0000ff;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-left: 30%;\r\n}\r\n.rightC {\r\n  margin-left: 42%;\r\n  margin-top: -17%;\r\n}\r\n#svgCurve2 {\r\n  position: absolute;\r\n  border: 2px dashed purple;\r\n  width: 300px;\r\n  height: 120px;\r\n  left: 11%;\r\n}\r\n</style>"],"sourceRoot":""}]}