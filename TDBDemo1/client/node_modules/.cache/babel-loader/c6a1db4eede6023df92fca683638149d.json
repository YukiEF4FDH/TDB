{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue?vue&type=template&id=7267ff41","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue","mtime":1635932899027},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1632349277000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGlkOiAiU2VjMS1DaGFydDAiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzdmciLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLmlrDlnovjgrPjg63jg4rjgqbjgqTjg6vjgrnmhJ/mn5Pnl4fjgavjgojjgovmpa3nuL7jgbjjga7lvbHpn78iKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfY2hhcnRfaW5mbyA9IF9yZXNvbHZlQ29tcG9uZW50KCJjaGFydC1pbmZvIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2NoYXJ0X2luZm8sIG51bGwsIHsKICAgIGRlZmF1bHQ6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF8zXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBcdDxTZWMyVGV4dD53aGF0PC9TZWMyVGV4dD5cclxuXHQ8U2VjMVRleHQ+PC9TZWMxVGV4dD4gIildLCAyMTEyCiAgLyogU1RBQkxFX0ZSQUdNRU5ULCBERVZfUk9PVF9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.3\\2021-11-03_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Chart0.vue"],"names":[],"mappings":";;AACM,EAAA,EAAE,EAAC;;;8BACP,mBAAA,CAAY,KAAZ,EAAY,IAAZ,EAAY,IAAZ,EAAY,CAAA;AAAA;AAAZ,C;;+CACY,uB;;;;;6DAFb,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFL,UAEK,EADL,YAAA,CAA8C,qBAA9C,EAA8C,IAA9C,EAA8C;sBAAlC;AAAA,aAAqB,C,UAAA,CAArB;AAAA,K,CAAkC;;;;AAAA,GAA9C,CACK,CAHN,C,EAID,mBAAA,CAAA,0DAAA,C","sourcesContent":["<template>\r\n\t<div id=\"Sec1-Chart0\">\r\n\t\t<svg> </svg>\r\n\t\t<chart-info>新型コロナウイルス感染症による業績への影響</chart-info>\r\n\t</div>\r\n<!-- \t<Sec2Text>what</Sec2Text>\r\n\t<Sec1Text></Sec1Text> -->\r\n</template>\r\n\r\n<script>\r\n\timport axios from 'axios';\r\n\timport * as d3 from 'd3';\r\n\t\r\n\tvar f1aData = \"default\";\r\n\r\n\texport default {\r\n\t\tname: 'Sec1Chart0',\r\n\t\tdata() {\r\n\t\t\tvar data = null;\r\n\t\t\treturn {\r\n\t\t\t\tdata,\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tdraw() {\r\n\t\t\t\tlet series = d3.stack()\r\n\t\t\t\t\t.keys(this.data.columns.slice(1))\r\n\t\t\t\t\t.offset(d3.stackOffsetExpand)(this.data)\r\n\t\t\t\t\t.map(d => (d.forEach(v => v.key = d.key), d));\r\n\r\n\t\t\t\tlet color = d3.scaleOrdinal()\r\n\t\t\t\t\t.domain(series.map(d => d.key))\r\n\t\t\t\t\t.range(d3.schemeSpectral[series.length])\r\n\t\t\t\t\t.unknown(\"#ccc\");\r\n\r\n\t\t\t\tlet margin = ({\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tright: 0,\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\tleft: 0\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet width = 1330;\r\n\t\t\t\tlet height = this.data.length * 33 + margin.top + margin.bottom;\r\n\t\t\t\tconsole.log(height);\r\n\r\n\t\t\t\tlet svg = d3.select(\"svg\")\r\n\t\t\t\t\t.attr(\"viewBox\", [0, 0, width, height])\r\n\t\t\t\t\t.style(\"overflow\", \"visible\");\r\n\r\n\t\t\t\tlet y = d3.scaleBand()\r\n\t\t\t\t\t.domain(this.data.map(d => d.month))\r\n\t\t\t\t\t.range([margin.top, height - margin.bottom])\r\n\t\t\t\t\t.padding(0.08);\r\n\r\n\t\t\t\tlet x = d3.scaleLinear()\r\n\t\t\t\t\t.range([margin.left, width - margin.right]);\r\n\r\n\t\t\t\tlet formatValue = x => isNaN(x) ? \"N/A\" : x.toLocaleString(\"en\");\r\n\r\n\t\t\t\tlet formatPercent = d3.format(\".1%\");\r\n\r\n\t\t\t\tlet arr_j = new Array();\r\n\t\t\t\tlet j = 0;\r\n\t\t\t\tlet postfix = \"\";\r\n\t\t\t\tlet length_y = series[0].length;\r\n\r\n\t\t\t\tsvg.append(\"g\")\r\n\t\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t\t.data(series)\r\n\t\t\t\t\t.enter().append(\"g\")\r\n\t\t\t\t\t.attr(\"fill\", function(d, i) {\r\n\t\t\t\t\t\tif (i + 1 == 1) arr_j[j++] = i + 1 + 'a'; // ???\r\n\t\t\t\t\t\telse if (i + 1 == 2) arr_j[j++] = i + 'b';\r\n\t\t\t\t\t\telse arr_j[j++] = i;\r\n\t\t\t\t\t\t// console.log(i);\r\n\t\t\t\t\t\treturn color(d.key);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.selectAll(\"rect\")\r\n\t\t\t\t\t.data(function(d) {\r\n\t\t\t\t\t\tj = 0;\r\n\t\t\t\t\t\treturn d;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(\"rect\")\r\n\t\t\t\t\t.attr(\"id\", function(d, i) {\r\n\t\t\t\t\t\tlet id = \"\";\r\n\t\t\t\t\t\tif ((j) % length_y == 0) {\r\n\t\t\t\t\t\t\tpostfix = arr_j[(j) / length_y];\r\n\t\t\t\t\t\t\tid = \"F1A_\" + (i + 1) + \"_\" + postfix;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tid = \"F1A_\" + (i + 1) + \"_\" + postfix;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log(\"F1A_\" + (i + 1) + \"_\" + arr_j[(j) / length_y]);\r\n\t\t\t\t\t\tj++;\r\n\t\t\t\t\t\treturn id;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.attr(\"class\", (d => `${d.data.month}${d.key}`))\r\n\t\t\t\t\t.attr(\"x\", d => x(d[0]))\r\n\t\t\t\t\t.attr(\"y\", (d) => y(d.data.month))\r\n\t\t\t\t\t.attr(\"width\", d => x(d[1]) - x(d[0]))\r\n\t\t\t\t\t.attr(\"height\", y.bandwidth());\r\n\r\n\t\t\t\tsvg.selectAll(\"rect\")\r\n\t\t\t\t\t.on(\"mouseover\", function() {\r\n\t\t\t\t\t\t// console.log(this);\r\n\t\t\t\t\t\t// console.log(d3.select(this)._groups[0]);\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.attr(\"fill\", \"yellow\")\r\n\t\t\t\t\t\t\t.append(\"title\")\r\n\t\t\t\t\t\t\t.text(d => `${d.data.month} ${d.key}\r\n\t\t\t\t\t\t\t\t\t\t\t${formatPercent(d[1] - d[0])} (${formatValue(d.data[d.key])})`);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\", function() {\r\n\t\t\t\t\t\td3.select(this)\r\n\t\t\t\t\t\t\t.transition()\r\n\t\t\t\t\t\t\t.duration(500)\r\n\t\t\t\t\t\t\t.attr(\"fill\", d => color(d.key));\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tlet yAxis = g => g\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t\t\t.call(d3.axisLeft(y).tickSizeOuter(0))\r\n\t\t\t\t\t.call(g => g.selectAll(\".domain\").remove());\r\n\r\n\t\t\t\tlet xAxis = g => g\r\n\t\t\t\t\t.attr(\"transform\", `translate(0,${margin.top})`)\r\n\t\t\t\t\t.call(d3.axisTop(x).ticks(width / 100, \"%\"))\r\n\t\t\t\t\t.call(g => g.selectAll(\".domain\").remove());\r\n\r\n\t\t\t\tsvg.append(\"g\")\r\n\t\t\t\t\t.call(xAxis);\r\n\r\n\t\t\t\tsvg.append(\"g\")\r\n\t\t\t\t\t.call(yAxis);\r\n\t\t\t},\r\n\t\t\tgetF1AJson() {\r\n\t\t\t\tconst path = 'http://127.0.0.1:5000/f1a-json';\r\n\t\t\t\taxios.get(path).then((res) => {\r\n\t\t\t\t\t\tf1aData = res.data;\r\n\t\t\t\t\t\tif (f1aData != \"default\") {\r\n\t\t\t\t\t\t\tf1aData = JSON.parse(f1aData);\r\n\t\t\t\t\t\t\tvar columns = Object.keys(f1aData[0]);\r\n\t\t\t\t\t\t\tcolumns = columns.slice(0,columns.length-1);\r\n\t\t\t\t\t\t\t// // console.log(columns);\r\n\t\t\t\t\t\t\tf1aData.columns = columns;\r\n\t\t\t\t\t\t\tconsole.log(\"f1aData\");\r\n\t\t\t\t\t\t\tconsole.log(f1aData);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// f1aData = f1aData.sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n\t\t\t\t\t\t\tf1aData = f1aData.sort((a, b) => b[1] / b.total - a[1] / a.total);\r\n\t\t\t\t\t\t\tthis.data = f1aData;\r\n\t\t\t\t\t\t\tthis.draw();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.error(error);\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tSayHi() {\r\n\t\t\t\treturn \"hi\"\r\n\t\t\t},\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.getF1AJson();\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\nchart-info{\r\n\tfont-size: 14px;\r\n\tcolor:#0000ff;\r\n\tfont-weight: bold;\r\n\ttext-align: center;\r\n\tmargin-left: 30%;\r\n}\r\n</style>"],"sourceRoot":""}]}