{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Text0.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Text0.vue","mtime":1636371251767},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IG1hcmtlZCBmcm9tICJtYXJrZWQiOwppbXBvcnQgcmVmIGZyb20gIkAvY29tcG9uZW50cy9yZWYudnVlIjsKaW1wb3J0IGNsYWltIGZyb20gIkAvY29tcG9uZW50cy9jbGFpbS52dWUiOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CnZhciBTZWMxVGV4dDAgPSB7CiAgbmFtZTogIlNlYzFUZXh0MCIsCiAgY29tcG9uZW50czogewogICAgcmVmOiByZWYsCiAgICBjbGFpbTogY2xhaW0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0TUQ6ICJUaGlzIDxyZWY+aXM8L3JlZj4gKmRlZmF1bHQqIHRleHRNRCIsCiAgICAgIHRleHRIVE1MOiAiVGhpcyA8cmVmPmlzPC9yZWY+ICpkZWZhdWx0KiB0ZXh0SFRNTCIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRUZXh0TUQ6IGZ1bmN0aW9uIGdldFRleHRNRCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gImh0dHA6Ly8xMjcuMC4wLjE6NTAwMC9zZWMxLXRleHQwLW1kIjsKICAgICAgYXhpb3MuZ2V0KHBhdGgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnRleHRNRCA9IHJlcy5kYXRhWzBdLkNPTlRFTlQ7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9KTsKICAgICAgZDMuc2VsZWN0KCIjU2VjMS1UZXh0MCIpLmFwcGVuZCgic3ZnIikuYXR0cigiaWQiLCAiZnVjayIpOwogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjZnVjayIpOwogICAgICB2YXIgY3VydmUgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsgLy8gTi5CLiBUaGVyZSBhcmUgc2V2ZXJhbCBwcmUtZGVmaW5lZCBmdW5jdGlvbnMgZm9yIGN1cnZlIGludGVycG9sYXRpb24gaW4gRDM7IGN1cnZlTmF0dXJhbCBpcyBvbmUuCiAgICAgIC8vIEl0J3MgYWxzbyBwb3NzaWJsZSB0byBkZWZpbmUgeW91ciBvd24gY3VydmUuCiAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZDMvZDMtc2hhcGUvYmxvYi9tYXN0ZXIvUkVBRE1FLm1kI2N1cnZlcwoKICAgICAgdmFyIHBvaW50cyA9IFtbMTAwLCA2MF0sIFs0MCwgOTBdLCBbMjAwLCA4MF0sIFszMDAsIDE1MF1dOwogICAgICBzdmcuYXBwZW5kKCdwYXRoJykuYXR0cignZCcsIGN1cnZlKHBvaW50cykpLmF0dHIoJ3N0cm9rZScsICdibGFjaycpIC8vIHdpdGggbXVsdGlwbGUgcG9pbnRzIGRlZmluZWQsIGlmIHlvdSBsZWF2ZSBvdXQgZmlsbDpub25lLAogICAgICAvLyB0aGUgb3ZlcmxhcHBpbmcgc3BhY2UgZGVmaW5lZCBieSB0aGUgcG9pbnRzIGlzIGZpbGxlZCB3aXRoCiAgICAgIC8vIHRoZSBkZWZhdWx0IHZhbHVlIG9mICdibGFjaycKICAgICAgLmF0dHIoJ2ZpbGwnLCAnbm9uZScpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNvbXBpbGVkTWFya2Rvd246IGZ1bmN0aW9uIGNvbXBpbGVkTWFya2Rvd24oKSB7CiAgICAgIHRoaXMuZ2V0VGV4dE1EKCk7CiAgICAgIHZhciBnb3R0ZW5NRCA9IG1hcmtlZCh0aGlzLnRleHRNRCwgewogICAgICAgIHNhbml0aXplOiBmYWxzZQogICAgICB9KTsKICAgICAgdGhpcy50ZXh0SFRNTCA9IGdvdHRlbk1EOyAvLyDmm7TmlrDmnKxjb21wb25lbnTnmoRkYXRhCiAgICAgIC8vIGdvdHRlbk1EID0gZ290dGVuTUQucmVwbGFjZSgiPHJlZj4iLCAiPHNwYW4gY2xhc3M9XCJyZWZlcmVuY2VcIj4iKTsKICAgICAgLy8gZ290dGVuTUQgPSBnb3R0ZW5NRC5yZXBsYWNlKCI8L3JlZj4iLCAiPC9zcGFuPiIpOwogICAgICAvLyBjb25zb2xlLmxvZyhnb3R0ZW5NRCk7CiAgICAgIC8vICAgLy8gdmFyIHJlcyA9IFZ1ZS5jb21waWxlKGdvdHRlbk1EKTsKICAgICAgLy8gICB2YXIgcmVzID0gbmV3IFZ1ZS5oKCJkaXYiLCB7fSwgZ290dGVuTUQpOwogICAgICAvLyAgIC8vIHZhciByZXMgPSBWdWUuY29tcGlsZSgnPGRpdj48c3Bhbj5hYWE8L3NwYW4+PC9kaXY+Jyk7CiAgICAgIC8vICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgLy8gICBnb3R0ZW5NRCA9IHJlcy5jaGlsZHJlbjsKCiAgICAgIHJldHVybiBnb3R0ZW5NRDsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRleHRNRCgpOwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKHRoaXMudGV4dEhUTUwpOyAvLyDlt7Lnu4/mm7TmlrDkuoYKICB9Cn07CmV4cG9ydCBkZWZhdWx0IFNlYzFUZXh0MDs="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\Sec1\\Sec1Text0.vue"],"names":[],"mappings":"AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAP,MAAmB,QAAnB;AACA,OAAO,GAAP,MAAgB,sBAAhB;AACA,OAAO,KAAP,MAAkB,wBAAlB;AACA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AAEA,IAAI,SAAQ,GAAI;AACd,EAAA,IAAI,EAAE,WADQ;AAEd,EAAA,UAAU,EAAE;AACV,IAAA,GAAG,EAAH,GADU;AAEV,IAAA,KAAK,EAAL;AAFU,GAFE;AAMd,EAAA,IANc,kBAMP;AACL,WAAO;AACL,MAAA,MAAM,EAAE,qCADH;AAEL,MAAA,QAAQ,EAAE;AAFL,KAAP;AAID,GAXa;AAYd,EAAA,OAAO,EAAE;AACP,IAAA,SADO,uBACK;AAAA;;AACV,UAAM,IAAG,GAAI,qCAAb;AACA,MAAA,KAAI,CACD,GADH,CACO,IADP,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAS;AACb,QAAA,KAAI,CAAC,MAAL,GAAc,GAAG,CAAC,IAAJ,CAAS,CAAT,EAAY,OAA1B;AACD,OAJH,EAKG,KALH,CAKS,UAAC,KAAD,EAAW;AAChB,QAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACD,OAPH;AASE,MAAA,EAAE,CAAC,MAAH,CAAU,aAAV,EAAyB,MAAzB,CAAgC,KAAhC,EAAuC,IAAvC,CAA4C,IAA5C,EAAiD,MAAjD;AAEE,UAAM,GAAE,GAAI,EAAE,CAAC,MAAH,CAAU,OAAV,CAAZ;AAEF,UAAM,KAAI,GAAI,EAAE,CAAC,IAAH,GAAU,KAAV,CAAgB,EAAE,CAAC,YAAnB,CAAd,CAfQ,CAgBd;AACA;AACA;;AAEQ,UAAM,MAAK,GAAI,CAAC,CAAC,GAAD,EAAM,EAAN,CAAD,EAAY,CAAC,EAAD,EAAK,EAAL,CAAZ,EAAsB,CAAC,GAAD,EAAM,EAAN,CAAtB,EAAiC,CAAC,GAAD,EAAM,GAAN,CAAjC,CAAf;AAEJ,MAAA,GAAE,CACH,MADC,CACM,MADN,EAED,IAFC,CAEI,GAFJ,EAES,KAAK,CAAC,MAAD,CAFd,EAGD,IAHC,CAGI,QAHJ,EAGc,OAHd,EAIF;AACA;AACA;AANE,OAOD,IAPC,CAOI,MAPJ,EAOY,MAPZ;AAQD;AA/BM,GAZK;AA6Cd,EAAA,QAAQ,EAAE;AACR,IAAA,gBADQ,8BACW;AACjB,WAAK,SAAL;AACA,UAAI,QAAO,GAAI,MAAM,CAAC,KAAK,MAAN,EAAc;AACjC,QAAA,QAAQ,EAAE;AADuB,OAAd,CAArB;AAGA,WAAK,QAAL,GAAgB,QAAhB,CALiB,CAKS;AAC1B;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;;AAEE,aAAO,QAAP;AACD;AAlBO,GA7CI;AAiEd,EAAA,OAjEc,qBAiEJ;AACR,SAAK,SAAL;AAGD,GArEa;AAsEd,EAAA,OAtEc,qBAsEJ;AACR,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,QAAjB,EADQ,CACoB;AAC7B;AAxEa,CAAhB;AA0EA,eAAe,SAAf","sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport marked from \"marked\";\r\nimport ref from \"@/components/ref.vue\";\r\nimport claim from \"@/components/claim.vue\";\r\nimport * as d3 from 'd3';\r\n\r\nvar Sec1Text0 = {\r\n  name: \"Sec1Text0\",\r\n  components: {\r\n    ref,\r\n    claim,\r\n  },\r\n  data() {\r\n    return {\r\n      textMD: \"This <ref>is</ref> *default* textMD\",\r\n      textHTML: \"This <ref>is</ref> *default* textHTML\",\r\n    };\r\n  },\r\n  methods: {\r\n    getTextMD() {\r\n      const path = \"http://127.0.0.1:5000/sec1-text0-md\";\r\n      axios\r\n        .get(path)\r\n        .then((res) => {\r\n          this.textMD = res.data[0].CONTENT;\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n\r\n        d3.select(\"#Sec1-Text0\").append(\"svg\").attr(\"id\",\"fuck\");\r\n\r\n          const svg = d3.select(\"#fuck\");\r\n\r\n        const curve = d3.line().curve(d3.curveNatural);\r\n  // N.B. There are several pre-defined functions for curve interpolation in D3; curveNatural is one.\r\n  // It's also possible to define your own curve.\r\n  // See https://github.com/d3/d3-shape/blob/master/README.md#curves\r\n\r\n          const points = [[100, 60], [40, 90], [200, 80], [300, 150]];\r\n\r\n      svg\r\n    .append('path')\r\n    .attr('d', curve(points))\r\n    .attr('stroke', 'black')\r\n    // with multiple points defined, if you leave out fill:none,\r\n    // the overlapping space defined by the points is filled with\r\n    // the default value of 'black'\r\n    .attr('fill', 'none');\r\n    },\r\n  },\r\n  computed: {\r\n    compiledMarkdown() {\r\n      this.getTextMD();\r\n      var gottenMD = marked(this.textMD, {\r\n        sanitize: false,\r\n      });\r\n      this.textHTML = gottenMD; // 更新本component的data\r\n      // gottenMD = gottenMD.replace(\"<ref>\", \"<span class=\\\"reference\\\">\");\r\n      // gottenMD = gottenMD.replace(\"</ref>\", \"</span>\");\r\n      // console.log(gottenMD);\r\n\r\n    //   // var res = Vue.compile(gottenMD);\r\n    //   var res = new Vue.h(\"div\", {}, gottenMD);\r\n    //   // var res = Vue.compile('<div><span>aaa</span></div>');\r\n    //   console.log(res);\r\n    //   gottenMD = res.children;\r\n\r\n      return gottenMD;\r\n    },\r\n  },\r\n  created() {\r\n    this.getTextMD();\r\n    \r\n    \r\n  },\r\n  updated() {\r\n    console.log(this.textHTML); // 已经更新了\r\n  },\r\n};\r\nexport default Sec1Text0;\r\n</script>\r\n\r\n<template>\r\n  <div id=\"Sec1-Text0\">\r\n    <!-- <div v-html=\"compiledMarkdown\"></div> -->\r\n    <h3 id=\"Sec1-Text0-Title\">\r\n      1.「今後マイナスの影響がある」が 11.1%、10 月より 2.5 ポイント増加\r\n    </h3>\r\n    <p class=\"leftP\">\r\n      新型コロナウイルス感染症により自社の業績にどのような影響があるか尋ねたところ、『マイナスの影響がある』(「既にマイナスの影響がある」\r\n      と「今後マイナスの影響がある」の合計)と見込む企業は<claim id=\"test0\">83.7% </claim>\r\n      となった。<claim>10 月より 0.5 ポイント増加し</claim>、<claim>3 カ月ぶりに増加に転じた</claim>。特に「今後マイナスの影響がある」は、<claim>10 月 より 2.5 ポイント増加 </claim>しており、感染拡大の第 3\r\n      波の影響により、先行きを懸念する企業が増えたとみられる。\r\n    </p>\r\n    <p  class=\"leftP\">\r\n      他方、『プラスの影響がある』(「既にプラスの影響がある」と「今後プラスの影響がある」の合計)と見込む企業は\r\n      <ref>4.6%</ref>となり、<claim>2 月以降微増傾向を示している</claim>。\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nh3 {\r\n  text-decoration: underline;\r\n}\r\np {\r\n\ttext-indent:2em;\r\n}\r\n.leftP {\r\n  margin-right:60%;\r\n}\r\n</style>\r\n"],"sourceRoot":""}]}