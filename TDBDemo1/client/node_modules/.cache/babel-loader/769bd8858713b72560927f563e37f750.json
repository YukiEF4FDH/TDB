{"remainingRequest":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve1.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve1.vue","mtime":1636367752624},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRlc3RDdXJ2ZTEiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgcG9pbnRTdHIgPSAiW1swLDBdLFsyMyw0MDVdLFsxMjAsMzVdLFsxMCwxMF1dIjsKICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShwb2ludFN0cik7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBkYXRhCiAgICB9OwogIH0sCiAgY29tcG9uZW50czoge30sCiAgbWV0aG9kczogewogICAgZHJhdzogZnVuY3Rpb24gZHJhdygpIHsKICAgICAgdmFyIHBvaW50cyA9IFtdOwogICAgICB2YXIgdGFyZ2V0X2NvcHkgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmRhdGEpOwoKICAgICAgZm9yICh2YXIgdGhpbmcgaW4gdGFyZ2V0X2NvcHkpIHsKICAgICAgICBjb25zb2xlLmxvZyh0YXJnZXRfY29weVt0aGluZ11bMF0gKyAiLCIgKyB0YXJnZXRfY29weVt0aGluZ11bMV0pOwogICAgICAgIHBvaW50cy5wdXNoKG5ldyBBcnJheSh0YXJnZXRfY29weVt0aGluZ11bMF0sIHRhcmdldF9jb3B5W3RoaW5nXVsxXSkpOwogICAgICB9CgogICAgICBjb25zb2xlLmxvZyhwb2ludHMpOwogICAgICB2YXIgY3VydmUgPSBkMy5saW5lKCkuY3VydmUoZDMuY3VydmVOYXR1cmFsKTsgLy8gICBkMy5zZWxlY3QoIiNkaXZDdXJ2ZTEiKS5hcHBlbmQoInN2ZyIpLmF0dHIoImlkIiwgInN2Z0N1cnZlIik7CiAgICAgIC8vIGQzLnNlbGVjdCgiI3N2Z0N1cnZlIikuYXBwZW5kKCJzdmciKS5hdHRyKCJpZCIsICJzdmdDdXJ2ZTEiKTsKCiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiNzdmdDdXJ2ZSIpLmFwcGVuZCgic3ZnIikuYXR0cigiaWQiLCAic3ZnQ3VydmUxIik7CiAgICAgIGQzLnNlbGVjdCgiI3N2Z0N1cnZlMSIpLmFwcGVuZCgicGF0aCIpLmF0dHIoImQiLCBjdXJ2ZShwb2ludHMpKS5hdHRyKCJzdHJva2UiLCAicmVkIikuYXR0cigiZmlsbCIsICJub25lIik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3KCk7CiAgfQp9Ow=="},{"version":3,"sources":["D:\\MyResearch\\WakitaLab\\ProjectTDB\\Code\\11.8\\2021-11-08_CHEN_TDBDemo-Flask-Vue\\client\\src\\components\\TestCurve1.vue"],"names":[],"mappings":"AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAK,EAAZ,MAAoB,IAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,YADO;AAEb,EAAA,IAFa,kBAEN;AAEP,QAAI,QAAO,GAAI,mCAAf;AACE,QAAI,IAAG,GAAI,IAAI,CAAC,KAAL,CAAW,QAAX,CAAX;AAEA,WAAO;AAAE,MAAA,IAAG,EAAH;AAAF,KAAP;AACD,GARY;AASb,EAAA,UAAU,EAAE,EATC;AAUb,EAAA,OAAO,EAAE;AACP,IAAA,IADO,kBACA;AACL,UAAI,MAAK,GAAI,EAAb;AACA,UAAM,WAAU,GAAI,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAK,IAAvB,CAApB;;AACA,WAAK,IAAI,KAAT,IAAkB,WAAlB,EACA;AACE,QAAA,OAAO,CAAC,GAAR,CAAY,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,IAAsB,GAAtB,GAA0B,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAAtC;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAI,KAAJ,CAAU,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAAV,EAAgC,WAAW,CAAC,KAAD,CAAX,CAAmB,CAAnB,CAAhC,CAAZ;AACF;;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AAEA,UAAM,KAAI,GAAI,EAAE,CAAC,IAAH,GAAU,KAAV,CAAgB,EAAE,CAAC,YAAnB,CAAd,CAVK,CAYP;AACE;;AAEA,UAAI,GAAE,GAAI,EAAE,CAAC,MAAH,CAAU,WAAV,EAAuB,MAAvB,CAA8B,KAA9B,EAAqC,IAArC,CAA0C,IAA1C,EAA+C,WAA/C,CAAV;AAEA,MAAA,EAAE,CAAC,MAAH,CAAU,YAAV,EACG,MADH,CACU,MADV,EAEG,IAFH,CAEQ,GAFR,EAEa,KAAK,CAAC,MAAD,CAFlB,EAGG,IAHH,CAGQ,QAHR,EAGkB,KAHlB,EAIG,IAJH,CAIQ,MAJR,EAIgB,MAJhB;AAKD;AAvBM,GAVI;AAmCb,EAAA,OAnCa,qBAmCH;AACR,SAAK,IAAL;AACD;AArCY,CAAf","sourcesContent":["<script>\r\nimport axios from \"axios\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  name: \"TestCurve1\",\r\n  data() {\r\n\r\n  let pointStr = \"[[0,0],[23,405],[120,35],[10,10]]\";\r\n    let data = JSON.parse(pointStr);\r\n\r\n    return { data };\r\n  },\r\n  components: {},\r\n  methods: {\r\n    draw() {\r\n      var points = [];\r\n      const target_copy = Object.assign({}, this.data);\r\n      for (var thing in target_copy)\r\n      {\r\n        console.log(target_copy[thing][0]+\",\"+target_copy[thing][1]);\r\n        points.push(new Array(target_copy[thing][0],target_copy[thing][1]));\r\n      }\r\n      console.log(points);\r\n\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n\r\n    //   d3.select(\"#divCurve1\").append(\"svg\").attr(\"id\", \"svgCurve\");\r\n      // d3.select(\"#svgCurve\").append(\"svg\").attr(\"id\", \"svgCurve1\");\r\n\r\n      var svg = d3.select(\"#svgCurve\").append(\"svg\").attr(\"id\",\"svgCurve1\");\r\n\r\n      d3.select(\"#svgCurve1\")\r\n        .append(\"path\")\r\n        .attr(\"d\", curve(points))\r\n        .attr(\"stroke\", \"red\")\r\n        .attr(\"fill\", \"none\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.draw();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":""}]}